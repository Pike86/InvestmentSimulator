//===============
//ADMIN FUNCTIONS
//===============	
	//-----------------------
	//Random Number Generator
	//-----------------------
	function getRandomInt(min, max)
	{
		return Math.floor(Math.random() * (max - min)) + min;
	}

//========================
//ADMINISTRATIVE VARIABLES
//========================

	//--------------
	//Time Variables
	//--------------
	var month=
	[
	"January",
	"February",
	"March",
	"April",
	"May",
	"June",
	"July",
	"August",
	"September",
	"October",
	"November",
	"December"
	]
	
	var monthCounter=0;
	var timeCounter=0;
	var quarterCounter=0;
	var year=1985;
	
	//---------------
	//Color Variables
	//---------------
	 var main = "#2E2C28";
		var mainShade1 = "#1b1a18";
		var mainShade2 = "#000000";
			
	var secondary = "#464C43";
		var secondaryShade1 = "#e5e7e4";
		var secondaryShade2 = "#f2f3f1";

	var sageGreen = "#3D6954";
		var sageGreenShade1 = "#2f5140";
		var sageGreenShade2 = "#1c3127";

	var limeGreen = "#93AB42";
		var limeGreenShade1 = "#4f5c24";
		var limeGreenShade2 = "#1f250e";

	var whiteGreen = "#CEE6D2";
	var penaltyRed = "#b30000";
	var bonusGreen = "#00cc99";
	
	//-----------------
	//Finance Variables
	//-----------------
	var cash=1000;
	var totalDividends = 0;
	var theMonthlyDividends = 0;
	
//----------------------------
//Viewport and Table Variables
//----------------------------
	//Get the Viewport Width
	var viewportWidth = Math.max(document.documentElement.clientWidth,window.innerWidth || 0);
	//Get the Viewport Height
	var viewportHeight = Math.max(document.documentElement.clientHeight,window.innerHeight || 0);

	//--------------------
	//Line Chart Variables
	//--------------------
		//Calculate Chart Area Width in Pixels
		var chartAreaWidth = Math.floor(viewportWidth * 0.600); 

		//Calculate Graph Width in Pixels
		var lineGraphWidth = Math.floor(viewportWidth*.770);
		
		//Calculate Chart Area Height in Pixels
		var chartAreaHeight = Math.floor(viewportHeight*0.2); 
		
		//Calculate Graph Height in Pixels
		var lineGraphHeight = Math.floor(viewportHeight*0.30);
		
	//-------------------
	//Pie Chart Variables
	//-------------------
		//Calculate the Pie Chart Area Width in Pixels
		var pieChartAreaWidth = Math.floor(viewportWidth * 0.20);
		
		//Calculate the Pie Graph Width in Pixels
		var pieChartGraphWidth = Math.floor(viewportWidth * .205);
		
		//Calculate Chart Area Height in Pixels
		var pieChartAreaHeight = Math.floor(viewportHeight*0.2); 
		
		//Calculate Graph Height in Pixels
		var pieChartGraphHeight = Math.floor(viewportHeight*0.3);

//============
//Stock Prices
//============
		
		//-----
		//Index
		//-----
		var priceSP500=[1.7963,1.8118,1.8066,1.7983,1.8955,1.9185,1.9092,1.8863,1.8208,1.8982,2.0217,2.1128,2.1178,2.2692,2.389,2.3552,2.4735,2.5084,2.3612,2.5293,2.3132,2.4398,2.4922,2.4217,2.7408,2.842,2.917,2.8836,2.901,3.04,3.1866,3.298,3.2183,2.5179,2.303,2.4708,2.5707,2.6782,2.5889,2.6133,2.6216,2.735,2.7202,2.6152,2.7191,2.7897,2.737,2.7772,2.9747,2.8886,2.9487,3.0964,3.2052,3.1798,3.4608,3.5145,3.4915,3.4036,3.4599,3.534,3.2908,3.3189,3.3994,3.308,3.6123,3.5802,3.5615,3.2256,3.0605,3.04,3.2222,3.3022,3.4393,3.6707,3.7522,3.7534,3.8983,3.7116,3.8781,3.9543,3.8786,3.9245,3.7522,4.1709,4.0878,4.127,4.0369,4.1495,4.1535,4.0814,4.2421,4.1403,4.178,4.1868,4.3135,4.3571,4.3878,4.4338,4.5167,4.4019,4.5019,4.5053,4.4813,4.6356,4.5893,4.6783,4.6179,4.6645,4.8161,4.6714,4.4577,4.5091,4.565,4.4427,4.5826,4.7549,4.6271,4.7235,4.5369,4.5927,4.7042,4.8739,5.0071,5.1471,5.334,5.4475,5.6206,5.6188,5.8441,5.815,6.0537,6.1593,6.3602,6.4043,6.455,6.5417,6.6912,6.7063,6.3995,6.5199,6.8733,7.0527,7.5702,7.4074,7.8616,7.9082,7.5712,8.0134,8.4828,8.8514,9.5431,8.9947,9.4728,9.1462,9.554,9.7043,9.8028,10.4934,11.0175,11.1175,10.9082,11.3384,11.2067,9.5728,10.1701,10.9867,11.6363,12.2923,12.7964,12.3833,12.8637,13.3518,13.0184,13.7271,13.2872,13.2041,12.8271,13.6293,13.8891,14.6925,13.9446,13.6642,14.9858,14.5243,14.206,14.546,14.3083,15.1768,14.3651,14.294,13.1495,13.2028,13.6601,12.3994,11.6033,12.4946,12.5582,12.2438,12.1123,11.3358,10.4094,10.5978,11.3945,11.4808,11.302,11.0673,11.4739,10.7692,10.6714,9.8982,9.1162,9.1607,8.1528,8.8576,9.3631,8.7982,8.557,8.4115,8.4818,9.1692,9.6359,9.745,9.9031,10.0801,9.9597,10.5071,10.582,11.1192,11.3113,11.4494,11.2621,11.073,11.2068,11.4084,11.0172,11.0424,11.1458,11.302,11.7382,12.1192,11.8127,12.036,11.8059,11.5685,11.915,11.9133,12.3418,12.2033,12.2881,12.0701,12.4948,12.4829,12.8008,12.8066,12.9487,13.1061,12.7009,12.702,12.7666,13.0382,13.3585,13.7794,14.0063,14.183,14.3824,14.0682,14.2086,14.8237,15.3062,15.0335,14.5527,14.7399,15.2675,15.4938,14.8114,14.6836,13.7855,13.3063,13.227,13.8559,14.0038,12.8,12.6738,12.8283,11.6636,9.6875,8.9624,9.0325,8.2588,7.3509,7.9787,8.7281,9.1914,9.1932,9.8748,10.2062,10.5708,10.3619,10.9563,11.151,10.7387,11.0449,11.6943,11.8669,10.8941,10.3071,11.016,10.4933,11.412,11.8326,11.8055,12.5764,12.8612,13.2722,13.2583,13.6361,13.452,13.2064,12.9228,12.1889,11.3142,12.533,12.4696,12.576,13.1241,13.6568,14.0847,13.9791,13.1033,13.6216,13.7932,14.0658,14.4067,14.1216,14.1618,14.2619,14.9811,15.1468,15.6919,15.9757,16.3074,16.0628,16.8573,16.3297,16.8155,17.5654,18.0581,18.4836,17.8259,18.5945,18.7234,18.8395,19.2357,19.6023,19.3067,20.0337,19.7229,20.1805,20.6756,20.589,19.9499,21.045,20.6789,20.8551,21.0739,20.6311,21.0384,19.7218,19.2003,20.7936,20.8041,20.4394,19.4024,19.3223,20.5974,20.653,20.9695,20.9886,21.736,21.7095,21.6827,21.2615,21.9881,22.3883,22.7887,23.6364,23.6272,23.842,24.118,24.2341,24.703,24.7165,25.1936,25.7526,26.4758,26.7361,28.2381,27.1383,26.4087,26.4805,27.0527,27.1837,28.1629,29.0152,29.1398,27.1174,27.6017,25.0685,27.041,27.8449,28.344,29.4583,27.5206,29.4176,29.8038,29.2646,29.7674,30.3756,31.4098,32.3078,32.2552,29.5422,25.8459,29.1243,30.4431,31.0029,32.7112,35.0031,33.63,32.6996,36.2163,37.5607,37.1424,38.1115,39.7289,41.8117,42.0411,42.975,43.9526,45.2268,43.0754,46.0538,45.67,47.6618,45.1555,43.7394,45.3041,41.3193,41.3215,37.8538,41.3029];
		
		var priceAndDividends=
		[
			//McDonalds
			itemOne=
			{
				price:[3.173611,3.347222,3.291667,3.375,3.708333,3.805556,3.652778,3.590278,3.604167,3.708333,4.152778,4.493056,4.4375,4.965278,5.354167,5.527778,5.701389,6.09375,5.333333,5.239583,4.71875,5.25,5.28125,5.072917,5.8125,6.354167,6.604167,6.666667,6.5625,6.625,6.9375,7.28125,6.75,5.6875,5.15625,5.5,5.65625,5.9375,5.4375,5.390625,5.5,5.765625,5.625,5.4375,5.9375,5.953125,5.84375,6.015625,6.5,6.3125,6.421875,6.875,7.453125,7.3125,7.78125,7.21875,7.4375,7.75,8.21875,8.625,8.15625,7.875,7.9375,7.5625,8.65625,8.875,7.84375,6.96875,6.5,6.3125,7.03125,7.28125,7.125,7.90625,8.6875,8.375,8.75,8.21875,8.1875,8.15625,8.75,8.6875,8.40625,9.5,10.875,10.125,9.96875,11.09375,11.71875,11.5,10.96875,10.625,11.09375,11.46875,12.25,12.1875,12.15625,12.65625,13.21875,12.03125,12.4375,12.28125,12.875,13.4375,12.96875,14.40625,14.65625,14.25,15.1875,15.15625,14.21875,15,15.5,14.4375,13.5625,14.125,13.1875,14.4375,14.1875,14.625,16.3125,16.625,17.0625,17.5,18.9375,19.5625,19.3125,18.25,19.125,20.5,22.3125,22.5625,25.125,25,24,23.9375,24.0625,23.375,23.1875,23.1875,23.6875,22.25,23.375,22.6875,22.75,21.625,23.625,26.75,25.125,24.15625,26.875,23.65625,23.8125,22.40625,24.25,23.875,23.5625,27.28125,30,30.9375,32.8125,34.5,33.40625,28.1875,29.84375,33.53125,35.03125,38.40625,39.40625,42.5,45.3125,42.375,38.5,41.125,41.6875,41.375,43.25,41.25,45.75,40.3125,37.375,31.75,37.375,38.0625,35.8125,32.9375,31.6875,29.890625,30.1875,31,31.875,34,29.35,29.4,26.549999,27.5,30.280001,27.059999,29.139999,30.030001,27.139999,26.07,26.84,26.469999,27.18,26.1,27.75,28.4,29.940001,28.450001,24.75,23.76,17.66,18.110001,18.5,16.08,14.24,13.61,14.46,17.1,18.73,22.059999,23.01,22.42,23.540001,25,25.629999,24.83,25.74,28.299999,28.57,27.23,26.4,26,27.5,27.02,28.030001,29.15,30.74,32.060001,32.389999,33.080002,31.139999,29.309999,30.940001,27.75,31.17,32.450001,33.490002,31.6,33.849998,33.720001,35.009998,34.91,34.360001,34.57,33.169998,33.599998,35.389999,35.900002,39.119999,41.919998,41.970001,44.330002,44.349998,43.689999,45.049999,48.279999,50.549999,50.759998,47.869999,49.25,54.470001,59.75,58.470001,58.91,53.580002,54.110001,55.77,59.580002,59.32,56.220001,59.790001,62,61.700001,57.93,58.75,62.189999,58.02,52.25,54.57,53.290001,58.990002,57.490002,55.060001,56.240002,57.07,58.610001,63.25,62.439999,62.43,63.849998,66.720001,70.589996,66.870003,65.870003,69.730003,73.059998,74.510002,77.769997,78.300003,76.760002,73.669998,75.68,76.089996,78.309998,81.540001,84.32,86.480003,90.410004,87.82,92.849998,95.519997,100.330002,99.050003,99.279999,98.099998,97.449997,89.339996,88.529999,89.360001,89.489998,91.75,86.800003,87.040001,88.209999,95.290001,95.900002,99.690002,102.139999,96.57,99,98.080002,94.360001,96.209999,96.519997,97.370003,97.029999,94.169998,95.150002,98.029999,101.379997,101.43,100.739998,94.559998,93.720001,94.809998,93.730003,96.809998,93.699997,92.440002,98.900002,97.440002,96.550003,95.93,95.07,99.860001,95.019997,98.529999,112.25,114.160004,118.139999,123.779999,117.190002,125.68,126.489998,122.059998,120.339996,117.650002,115.660004,115.360001,112.57,119.269997,121.720001,122.57,127.650002,129.610001,139.929993,150.889999,153.160004,155.139999,159.970001,156.679993,166.910004,171.970001,172.119995,171.139999,157.740005,156.380005,167.440002,160.009995,156.690002,157.539993,162.229996,167.289993,176.899994,188.509995,177.570007,178.779999,183.839996,189.899994,197.570007,198.270004,207.660004,210.720001,217.970001,214.710007,196.699997,194.479996,197.610001,213.970001,194.169998,165.350006,187.559998,186.320007,184.470001,194.279999,213.520004,219.490005,213,217.440002,214.580002,207.839996,206.139999,224.139999,236.080002,233.889999,230.990005,242.710007,237.460007,241.110001,245.550003,244.600006,268.070007,259.450012,244.770004,247.279999,249.160004,252.210007,246.880005,252.419998],
				dividend:[0.011389,0.0125,0.0125,0.0125,0.0125,0.009167,0.01375,0.01375,0.01375,0.015583,0.015625,0.015625,0.0175,0.0175,0.0175,0.0175,0.0175,0.019375,0.01925,0.01925,0.01925,0.02125,0.02125,0.02125,0.02125,0.023,0.023,0.023,0.02375,0.025,0.025,0.025,0.025,0.02675,0.02675,0.02675,0.02675,0.03,0.03,0.03,0.03,0.034,0.034,0.034,0.034,0.0375,0.0375,0.0375,0.0375,0.041,0.041,0.041,0.041,0.045,0.045,0.045,0.049,0.049,0.049,0.049,0.05375,0.05375,0.05375,0.05375,0.05625,0.05625,0.05625,0.05625,0.05875,0.05875,0.05875,0.05875,0.1,0.1,0.1,0.1,0.1375,0.1375,0.1375,0.1375,0.1675,0.1675,0.1675,0.1675,0.25,0.25,0.25,0.25,0.375,0.375,0.375,0.375,0.375,0.375,0.375,0.5,0.5,0.5,0.5,0.55,0.55,0.55,0.55,0.61,0.61,0.61,0.61,0.7,0.7,0.7,0.7,0.77,0.77,0.77,0.77,0.81,0.81,0.81,0.81,0.85,0.85,0.85,0.85,0.89,0.89,0.89,0.89,0.94,0.94,0.94,0.94,1.01,1.01,1.01,1.01,1.16,1.16,1.16,1.16,1.25,1.25,1.25,1.25,1.29,1.29,1.29,1.29,1.38,1.38,1.38]
			},
			//GE
			itemTwo=
			{
				price:[20.472755,20.392628,18.950321,18.950321,19.431089,19.831732,20.552885,19.551283,18.429487,18.469551,21.033653,23.317308,22.716347,24.839745,25.160255,25.040064,25.560898,25.961538,23.397436,25.200321,23.03686,24.439102,26.602564,27.564102,32.131409,33.133015,33.613781,33.173077,33.333332,34.85577,37.98077,40.064102,39.423077,30.368589,27.163462,28.285255,28.926283,29.166668,25.881411,25.881411,26.923077,28.125,27.403847,25.881411,27.804487,27.964745,28.846153,28.685898,31.009615,29.326923,28.52564,31.330128,35.016026,33.092949,37.5,36.939102,36.217949,35.496796,39.743591,41.346153,39.903847,39.583332,41.185898,41.025642,44.150642,44.391026,45.913464,39.743591,34.935898,33.333332,35.096153,36.778847,41.025642,43.589745,44.631409,45.352566,49.51923,47.435898,46.955128,47.996796,44.471153,44.23077,41.506409,49.038464,48.237179,50.400642,48.557693,49.118591,48.958332,49.839745,49.038464,47.435898,50.160255,49.198719,53.365383,54.807693,55.208332,53.926281,57.131409,58.092949,59.455128,61.378204,63.141026,62.98077,61.458332,62.179485,63.060898,67.227562,69.070511,67.54808,64.102562,61.057693,63.782051,59.775642,64.583336,63.782051,61.698719,62.660255,58.974358,65.384613,66.025642,70.192307,69.230766,71.794868,74.358971,72.275642,75.641029,75.480766,81.730766,81.089745,86.057693,92.307693,98.397438,96.794868,99.839745,99.03846,106.089745,111.217949,105.448715,106.570511,116.666664,124.03846,133.333328,126.762817,132.692307,131.891022,127.243591,142.307693,154.807693,166.666672,179.807693,160.416672,174.519226,165.705124,189.42308,188.141022,198.717957,199.358978,220.993591,218.429489,213.782043,233.012817,229.32692,205.128204,204.006409,224.358978,231.730774,261.538452,268.910248,257.211548,283.653839,270.192322,260.737183,289.743591,279.487183,287.980774,304.006409,347.435883,333.653839,396.794861,343.589752,339.423065,399.038452,403.205139,404.807678,407.692322,397.596161,450.961548,444.711548,421.634613,381.25,368.75,353.692322,357.692322,322,373.307678,376.923065,376.923065,334.615387,314.615387,286.153839,280.076935,296.153839,308.307678,285.769226,296.153839,287.692322,242.692307,239.538467,223.461533,247.692307,231.92308,189.615387,194.230774,208.615387,187.307693,178,185,196.153839,226.538467,220.769226,220.615387,218.769226,227.461533,229.307693,223.153839,220.538467,238.307693,258.692322,250.153839,234.769226,230.384613,239.384613,249.230774,255.769226,252.230774,258.307678,262.461548,272,280.769226,277.923065,270.769226,277.384613,278.461548,280.615387,266.538452,265.384613,258.538452,259,260.846161,274.769226,269.615387,251.92308,252.846161,267.538452,266.076935,263.538452,253.538467,251.461533,262,271.538452,270.076935,271.384613,286.230774,277.307678,268.538452,272,283.538452,289.076935,294.461548,298.153839,299,318.461548,316.615387,294.538452,285.153839,272,254.92308,284.692322,251.538467,236.307693,205.307693,217.615387,216.153839,196.153839,150.07692,132.07692,124.615387,93.307693,65.46154,77.769234,97.307693,103.692307,90.153847,103.07692,106.92308,126.307693,109.692307,123.230766,116.384613,123.692307,123.53846,140,145.07692,125.769234,110.92308,124,111.384613,125,123.230766,121.769234,140.692307,154.92308,160.92308,154.230774,157.307693,151.07692,145.07692,137.769226,125.46154,117.07692,128.538467,122.384613,137.769226,143.92308,146.538467,154.384613,150.615387,146.846161,160.307693,159.615387,159.307693,174.692307,162,162.538467,161.461533,171.384613,178.615387,177.846161,171.461533,179.384613,178.384613,187.461533,178,183.769226,201.07692,205.07692,215.615387,193.307693,195.92308,199.153839,206.846161,206.07692,202.153839,193.461533,199.846161,197.07692,198.538467,203.769226,194.384613,183.769226,199.92308,190.846161,208.307693,209.769226,204.384613,200.769226,190.92308,194,222.461533,230.307693,239.615387,223.846161,224.153839,244.538467,236.538467,232.538467,242.153839,239.538467,240.307693,227.846161,223.846161,236.615387,243.07692,228.461533,229.307693,229.230774,223,210.615387,207.769226,197,188.846161,186,155.07692,140.692307,134.230774,124.384613,108.53846,103.692307,108.230766,108.307693,104.692307,104.846153,99.53846,86.846153,77.692307,57.692307,58.23077,78.153847,83.120003,79.919998,81.360001,75.519997,84,83.599998,66,71.519997,79.839996,90.160004,89.279999,99.599998,87.040001,63.52,54.400002,52.560001,54.639999,48.560001,50.720001,49.84,59.360001,81.440002,86.400002,85.440002,100.32,105.040001,104.959999,112.480003,107.68,103.599998,105.410004,103.029999,104.870003,94.989998,94.470001,94.480003,95.510002,91.5,74.550003,78.290001,63.669998,63.68],
				dividend:[0.176282,0.176282,0.176282,0.185897,0.185897,0.185897,0.185897,0.201923,0.201923,0.211538,0.211538,0.224359,0.224359,0.224359,0.224359,0.224359,0.262821,0.262821,0.262821,0.301282,0.301282,0.301282,0.301282,0.326923,0.326923,0.326923,0.326923,0.352564,0.352564,0.352564,0.378205,0.403846,0.403846,0.403846,0.403846,0.461538,0.461538,0.461538,0.461538,0.525641,0.525641,0.525641,0.525641,0.589744,0.589744,0.589744,0.589744,0.666667,0.666667,0.666667,0.666667,0.769231,0.769231,0.769231,0.769231,0.897436,0.897436,0.897436,0.897436,1.051282,1.051282,1.053846,1.053846,1.230769,1.230769,1.230769,1.230769,1.384615,1.384615,1.384615,1.384615,1.461538,1.461538,1.461538,1.461538,1.538462,1.538462,1.538462,1.538462,1.692308,1.692308,1.692308,1.692308,1.923077,1.923077,1.923077,1.923077,2.153846,2.153846,2.153846,2.153846,2.384615,2.384615,2.384615,2.384615,2.384615,2.384615,0.769231,0.769231,0.769231,0.769231,0.769231,0.923077,1.076923,1.076923,1.153846,1.153846,1.307692,1.307692,1.727692,1.307692,1.461538,1.461538,1.461538,1.461538,1.692308,1.692308,1.692308,1.692308,1.769231,1.769231,1.769231,1.769231,1.769231,1.769231,1.769231,1.769231,1.846154,1.846154,1.846154,1.846154,0.923077,0.923077,0.923077,0.923077,0.076923,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08,0.08]
			},
			//AT&T
			itemThree=
			{
				price:[4.578927,4.657603,4.704809,4.736279,5.043114,5.287009,5.12179,5.161128,4.909366,4.917233,5.050982,5.38142,5.373552,5.554507,5.845607,5.774799,6.278323,6.891994,6.577291,7.29324,6.671702,6.750378,7.041478,7.065081,7.340446,7.316843,7.371916,6.766113,7.03361,7.340446,7.151624,7.482062,8.284554,7.387651,6.396337,6.490748,7.269637,7.080816,6.844789,6.655967,7.175227,7.482062,7.175227,7.104418,7.623678,7.859705,7.836103,7.623678,8.237349,8.237349,8.473376,9.087047,9.747923,9.629909,10.739237,10.172772,10.739237,10.479607,10.668429,12.060989,9.98395,10.337991,10.668429,10.314388,11.02247,10.172772,10.267183,9.252266,9.889539,10.290785,10.408799,10.574018,9.865937,10.149169,10.597621,10.078361,9.771526,10.101964,10.196375,10.385196,10.550415,11.352908,10.904456,12.202606,11.400113,11.400113,10.857251,11.777757,11.376511,11.518127,12.438633,12.556647,12.93429,12.603852,13.099509,13.97281,13.005098,14.067221,14.751699,14.58648,14.492069,14.633686,15.294562,17.182779,16.23867,16.710726,16.049849,15.672205,15.813822,14.775302,15.247356,15.672205,15.530589,16.427492,15.861027,15.625,16.049849,15.813822,15.625,15.247356,16.097054,15.719411,15.861027,16.663521,16.993958,17.985271,18.174093,19.118202,20.770393,21.10083,20.439955,21.62009,21.384064,20.723186,19.873489,18.92938,18.646149,18.598944,18.457327,17.607628,18.174093,18.362915,19.873489,19.590258,20.770393,21.714502,19.826284,20.959215,22.092146,23.366692,22.351774,20.534367,23.201473,24.027569,27.426359,27.662388,29.361782,28.55929,32.748772,31.297205,29.361782,30.211479,30.919561,28.748112,33.515862,34.979229,36.20657,40.502266,40.7855,39.935802,35.640106,42.10725,38.614048,43.806648,43.145771,36.300983,38.566841,39.841389,39.758781,36.820244,32.382931,28.512085,31.816465,33.091011,32.996601,33.232628,32.146904,31.545034,37.669941,43.570618,41.49358,36.064957,36.518127,36.027191,33.708458,31.155588,32.515106,30.256798,34.010574,30.898792,35.589123,28.783989,28.232628,29.584593,28.285498,28.580059,28.277946,23.459215,25.898792,23.036255,20.891239,18.685801,15.181269,19.380665,21.525681,20.47583,18.459215,15.70997,15.151057,17.643505,19.229607,19.297583,17.643505,16.963745,16.805136,18.111782,17.583082,19.690332,19.259819,18.134441,18.534742,18.806646,17.900303,18.31571,19.138973,19.478851,19.599697,19.07855,19.010574,19.463745,17.94562,18.172205,17.89275,17.97583,17.658609,17.938066,18.466766,18.187311,18.104231,18.013596,18.814199,18.496979,19.599697,20.838369,20.42296,19.796074,19.682779,21.064955,22.651056,23.512085,24.592146,25.86858,25.611782,27.001511,28.42145,27.794561,29.780968,29.244713,31.223564,31.344412,29.57704,30.113293,31.956194,31.563444,28.859516,31.389729,29.070997,26.306646,28.927492,29.23716,30.135952,25.44562,23.270393,24.161631,21.087612,20.219032,21.570997,21.525681,18.595165,17.953173,19.033234,19.350452,18.723564,18.76133,19.811178,19.675226,20.400303,19.388218,20.347431,21.170694,19.154079,18.73867,19.516617,19.682779,18.353474,18.270393,19.592146,20.415407,21.601208,21.540785,20.989426,22.190332,20.785498,21.435045,23.119335,23.504532,23.836859,23.723564,22.099697,21.510574,21.540785,22.137463,21.888218,22.839878,22.212992,23.104231,23.587612,24.856495,25.808157,26.933535,28.640484,27.673716,28.474319,26.125378,25.777946,25.460726,26.276436,27.122356,27.711479,28.293051,26.427492,26.73716,26.638973,25.551359,25.543806,27.341391,26.593657,26.555891,25.166162,24.116314,26.487915,26.963745,26.79003,26.706949,26.880665,26.404835,26.616314,26.314199,26.722054,25.37009,24.864048,26.102718,24.660122,26.163141,26.087612,26.827795,26.23867,25.075529,24.60725,25.309668,25.430513,25.989426,27.235649,27.907854,29.584593,29.320242,29.569487,32.635952,32.696377,30.876133,30.672205,27.787008,29.176737,32.122356,31.842899,31.563444,31.382175,29.932024,29.101208,28.496979,29.456194,28.293051,29.584593,25.415407,27.477341,29.365559,28.285498,27.416918,26.925982,24.697886,24.410875,24.252266,24.146526,24.123867,25.362537,23.172205,23.595165,21.555891,22.703926,23.504532,23.685801,23.383686,23.096678,25.309668,25.717524,26.63142,28.580059,29.070997,28.232628,29.516617,28.413897,26.601208,22.016617,23.013596,23.308157,22.832327,22.341391,22.515106,21.533234,20.407854,21.714502,21.722054,21.623867,21.064955,22.862537,23.723564,22.228098,21.73716,21.185801,20.70997,20.400303,19.07855,17.243202,18.580059,19.259819,17.89275,17.847431,18.860001,21.290001,20.959999,20.530000],
				dividend:[0.116667,0.125,0.125,0.125,0.125,0.133333,0.133333,0.133333,0.133333,0.145,0.145,0,0.145,0.155,0.155,0.155,0.155,0.1625,0.1625,0.1625,0.1625,0.1725,0.1725,0.1725,0.1725,0.1775,0.1775,0.1775,0.1775,0.1825,0.1825,0.1825,0.1825,0.18875,0.1885,0.1885,0.1885,0.1975,0.1975,0.1975,0.1975,0.206,0.206,0.206,0.206,0.215,0.215,0.215,0.215,0.224,0.224,0.224,0.224,0.232,0.232,0.232,0.232,0.242,0.243,0.244,0.244,0.254,0.254,0.254,0.253,0.256,0.256,0.256,0.256,0.27,0.27,0.27,0.27,0.333,0.383,0.383,0.313,0.313,0.313,0.313,0.323,0.323,0.323,0.323,0.333,0.333,0.333,0.333,0.355,0.355,0.355,0.355,0.4,0.4,0.4,0.4,0.41,0.41,0.41,0.41,0.42,0.42,0.42,0.42,0.43,0.43,0.43,0.43,0.44,0.44,0.44,0.44,0.45,0.45,0.45,0.45,0.46,0.46,0.46,0.46,0.47,0.47,0.47,0.47,0.48,0.48,0.48,0.48,0.49,0.49,0.49,0.49,0.5,0.5,0.5,0.5,0.51,0.51,0.51,0.51,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.52,0.278,0.278]
			},
			//IBM
			itemFour=
			{
				price:[32.594406,32.026768,30.353727,30.234226,30.742113,29.57696,31.39938,30.264101,29.606836,31.040871,33.401051,37.165394,36.20937,36.05999,36.20937,37.344646,36.418499,35.014339,31.668261,33.162045,32.146271,29.547085,30.383604,28.680689,30.77199,33.341301,35.880737,38.270794,38.240917,38.838432,38.479923,40.242592,36.030113,29.278202,26.469885,27.605164,26.858271,28.083174,25.722992,27.097275,26.888145,30.443356,30.054972,26.649139,27.575287,29.308079,28.32218,29.128824,31.220123,29.039198,26.081501,27.276529,26.201004,26.738768,27.485661,27.993547,26.111378,23.960325,23.332935,22.496414,23.571941,24.826721,25.364485,26.051624,28.680689,28.083174,26.649139,24.348709,25.424234,25.215105,27.157026,27.007648,30.293978,30.77199,27.216778,24.617592,25.364485,23.213432,24.199331,23.153681,24.76697,23.482313,22.10803,21.271511,21.510515,20.763622,19.95698,21.689772,21.689772,23.392687,22.645794,20.703873,19.299713,15.983509,16.312141,12.039914,12.308795,12.995937,12.159417,11.621654,12.607553,11.800908,10.635755,10.934512,10.038241,10.994264,12.876434,13.503824,13.503824,12.637428,13.055688,13.74283,15.057361,14.041587,14.78848,16.371893,16.640774,17.805927,16.909657,17.566921,17.238289,17.985182,19.628345,22.615917,22.227533,22.944551,26.021749,24.707218,22.586042,23.243307,23.093929,21.839149,25.932121,29.308079,26.589388,25.752869,25.513863,23.661568,25.693117,27.336281,29.756214,30.831739,38.091537,36.20937,37.494026,34.357075,32.803535,38.36042,41.347992,43.140533,50.549713,48.458412,50.669216,47.084129,52.342255,50.011951,47.203632,49.922321,49.653442,55.38958,56.166348,54.881691,63.336521,53.83604,61.424473,70.984703,78.931641,88.133362,87.595604,81.142448,84.727531,99.994026,110.898659,123.565964,120.160133,119.08461,115.67878,93.929253,98.530113,103.130974,107.313576,98.231361,113.169212,106.596558,102.593208,104.744263,107.313576,126.209969,107.672081,94.168259,89.388145,81.261948,107.07457,95.506691,91.950287,110.076485,106.883362,108.508606,100.583176,95.554497,87.686424,103.317398,110.506691,115.640533,103.145317,93.80497,99.426384,80.076485,76.912048,68.833649,67.304016,72.06501,55.745697,75.468452,83.097511,74.091782,74.760994,74.521988,74.980881,81.166351,84.168259,78.871895,77.676865,78.403442,84.445503,85.54493,86.558319,88.60421,94.866158,92.25621,87.801147,84.292542,84.694077,84.273422,83.240921,80.965584,81.969406,85.803062,90.095604,94.244743,89.311661,88.508606,87.361374,73.021034,72.227531,70.936905,79.789673,77.07457,76.692162,78.27916,84.99044,78.585083,77.724663,76.711281,78.843208,78.718925,76.38623,73.441681,74.005737,77.40918,78.336517,88.2696,87.877632,92.877632,94.789673,88.852776,90.114723,97.715103,101.912048,100.621414,105.783936,111.558319,112.619499,111.013382,100.554497,103.346077,102.39962,108.852776,110.076485,115.391968,123.738052,113.317398,122.351814,116.376671,111.816444,88.881454,78.011475,80.458893,87.619499,87.982796,92.629066,98.671127,101.606117,99.827919,112.74379,112.858505,114.349907,115.305923,120.793503,125.143402,117.007645,121.567879,122.60994,123.326958,119.751434,118.049713,122.753349,117.715103,128.240921,137.284897,135.238998,140.305923,154.875717,154.761002,155.898666,163.0784,161.500961,164.005737,173.852768,164.349899,167.179733,176.510513,179.732315,175.793503,184.13002,188.0784,199.474182,197.973236,184.416824,186.978973,187.361374,186.281067,198.326965,185.975143,181.711288,183.12619,194.139572,191.998093,203.919693,193.632889,198.871887,182.705551,186.462708,174.254303,177.036331,171.328873,171.778198,179.321228,168.910141,177.026764,184.024857,187.829834,176.252396,173.298279,183.240921,183.843216,181.481842,157.170166,155.038239,153.384323,146.567871,154.818359,153.441681,163.757172,162.189301,155.506699,154.86615,141.38623,138.59465,133.919693,133.288712,131.567871,119.302101,125.267685,144.789673,139.521988,146.978973,145.105164,153.556412,151.892929,151.864243,146.931168,155.086044,158.690247,166.845123,171.912048,166.481842,153.240921,145.917786,147.065002,138.307846,136.73996,138.699814,147.284897,147.198853,146.673035,156.500961,148.977051,146.682602,138.585083,135.095596,133.556412,138.556412,140.038239,144.560226,110.353729,118.80497,108.671127,128.508606,132.05545,134.894836,134.101334,121.405357,131.835571,141.72084,129.569794,139.024857,127.848946,128.537292,128.145309,137.40918,124.426384,106.051628,120.038239,119.407265,115.458893,117.533463,117.887192,116.319313,106.749519,118.087952,120.34417,113.871895,113.699806,127.39962,135.640533,137.418732,140.143402,134.761002,134.168259,132.820267,119.598473,117.099998,133.660004,133.570007,122.510002,130.020004,132.210007,138.839996,141.190002,138.130005],
				dividend:[0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.262906,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.289197,0.129063,0.129063,0.059751,0.059751,0.059751,0.059751,0.059751,0.059751,0.059751,0.059751,0.059751,0.059751,0.059751,0.083652,0.083652,0.083652,0.083652,0.095602,0.095602,0.095602,0.095602,0.105163,0.105163,0.105163,0.105163,0.114723,0.114723,0.114723,0.114723,0.124283,0.124283,0.124283,0.124283,0.133843,0.133843,0.133843,0.133843,0.143403,0.143403,0.143403,0.143403,0.152964,0.152964,0.152964,0.152964,0.172084,0.172084,0.172084,0.172084,0.191205,0.191205,0.191205,0.191205,0.286807,0.286807,0.286807,0.286807,0.382409,0.382409,0.382409,0.382409,0.478011,0.478011,0.478011,0.478011,0.525813,0.525813,0.525813,0.525813,0.621415,0.621415,0.621415,0.621415,0.717017,0.717017,0.717017,0.717017,0.81262,0.81262,0.81262,0.81262,0.908222,0.908222,0.908222,0.908222,1.051625,1.051625,1.051625,1.051625,1.24283,1.24283,1.24283,1.24283,1.338432,1.338432,1.338432,1.338432,1.434034,1.434034,1.434034,1.434034,1.500956,1.500956,1.500956,1.500956,1.548757,1.548757,1.548757,1.548757,1.558317,1.558317,1.558317,1.558317,1.567878,1.567878,1.64,1.64,1.65]
			},
			//KO
			itemFive=
			{
				price:[1.25,1.322917,1.458333,1.427083,1.414063,1.445313,1.505208,1.492188,1.453125,1.492188,1.734375,1.760417,1.747396,2.005208,2.192708,2.322917,2.416667,2.614583,2.445313,2.367188,2.117188,2.289063,2.28125,2.359375,2.664063,2.804688,2.859375,2.664063,2.679688,2.78125,2.976563,3.164063,3.023438,2.578125,2.3125,2.382813,2.351563,2.335938,2.390625,2.390625,2.375,2.4375,2.398438,2.5,2.734375,2.695313,2.710938,2.789063,2.921875,2.984375,3.203125,3.390625,3.609375,3.523438,4.25,4.15625,4.1875,4.523438,4.828125,4.828125,4.304688,4.40625,4.671875,4.765625,5.640625,5.546875,5.671875,5.28125,4.9375,5.609375,5.78125,5.8125,6.09375,6.546875,6.78125,6.59375,7.15625,6.8125,7.515625,8.21875,8.0625,8.328125,8.671875,10.03125,9.6875,10.21875,10.21875,10.375,11,10,10.46875,10.75,10.125,10.15625,9.9375,10.46875,10.59375,10.59375,10.65625,9.84375,10.375,10.75,10.8125,10.84375,10.5625,10.84375,10.5,11.15625,10.21875,10.65625,10.15625,10.4375,10.0625,10.15625,11.09375,11.5,12.15625,12.59375,12.78125,12.875,13.125,13.75,14.09375,14.53125,15.40625,15.9375,16.40625,16.0625,17.25,17.96875,18.9375,18.5625,18.84375,20.1875,20.6875,20.375,23,24.5,23.4375,25,25.4375,25.25,25.5625,26.3125,28.9375,30.5,27.875,31.8125,34.25,34,34.5625,28.65625,30.5,28.3125,31.25,33.34375,32.375,34.3125,38.71875,37.9375,39.1875,42.75,40.25,32.5625,28.8125,33.78125,35.03125,33.5,32.65625,31.9375,30.6875,34.03125,34.25,31,30.28125,29.90625,24.125,29.5,33.65625,29.125,28.71875,24.3125,23.46875,23.625,26.6875,28.71875,30.65625,26.320313,27.5625,30.1875,31.3125,30.46875,29,26.514999,22.58,23.094999,23.700001,22.5,22.299999,24.334999,23.424999,23.940001,23.48,23.575001,21.875,23.695,26.129999,27.754999,27.780001,28,24.969999,25.5,23.98,23.24,22.82,21.92,20.23,20.110001,20.24,20.200001,22.785,23.205,22.485001,21.76,21.48,23.200001,23.25,25.375,24.620001,24.98,25.15,25.285,25.674999,25.24,21.93,22.355,20.025,20.33,19.655001,20.82,20.745001,21.4,20.834999,21.719999,22.315001,20.875,21.879999,22,21.594999,21.389999,21.344999,20.155001,20.690001,20.985001,20.934999,20.98,22.014999,21.51,22.25,22.405001,22.34,23.360001,23.415001,24.125,23.940001,23.34,24,26.094999,26.495001,26.155001,26.055,26.889999,28.735001,30.879999,31.049999,30.684999,29.5,29.23,30.434999,29.434999,28.629999,25.99,25.75,26.035,26.440001,22.030001,23.434999,22.635,21.360001,20.424999,21.975,21.525,24.58,23.995001,24.92,24.385,26.85,26.655001,28.6,28.5,27.125,26.360001,27.5,26.725,25.700001,25.059999,27.555,27.940001,29.26,30.66,31.584999,32.884998,31.424999,31.959999,33.169998,33.73,33.404999,33.645,34.005001,35.224998,33.779999,34.16,33.615002,34.985001,33.764999,34.93,37.005001,38.16,37.365002,39.095001,40.400002,37.400002,37.93,37.18,37.919998,36.25,37.240002,38.720001,40.439999,42.330002,39.990002,40.110001,40.080002,38.18,37.880001,39.57,40.189999,41.310001,37.82,38.200001,38.66,40.790001,40.91,42.360001,39.290001,41.720001,42.66,41.880001,44.830002,42.220001,41.169998,43.299999,40.549999,40.560001,40.959999,39.23,41.080002,39.32,40.119999,42.349998,42.619999,42.959999,42.919998,43.130001,46.389999,44.799999,44.599998,45.330002,43.630001,43.43,42.32,42.400002,40.349998,41.459999,41.57,41.959999,42.439999,43.150002,45.470001,44.849998,45.84,45.549999,45.009998,45.98,45.77,45.880001,47.59,43.220001,43.43,43.209999,43,43.860001,46.630001,44.57,46.189999,47.880001,50.400002,47.349998,48.130001,45.34,46.860001,49.060001,49.130001,50.919998,52.630001,55.040001,54.439999,54.43,53.400002,55.349998,58.400002,53.490002,44.25,45.889999,46.68,44.68,47.240002,49.529999,49.369999,48.060001,51.599998,54.84,48.150002,48.990002,52.709999,53.98,55.290001,54.110001,57.029999,56.310001,52.470001,56.369999,52.450001,59.209999,61.009998,62.240002,62,64.610001,63.380001,62.91,61.650002],
				dividend:[0.015417,0.015417,0.015417,0.015417,0.01625,0.01625,0.01625,0.01625,0.0175,0.0175,0.0175,0.0175,0.01875,0.01875,0.01875,0.01875,0.02125,0.02125,0.02125,0.02125,0.025,0.025,0.025,0.025,0.03,0.03,0.03,0.03,0.035,0.035,0.035,0.035,0.0425,0.0425,0.0425,0.0425,0.04875,0.04875,0.04875,0.04875,0.055,0.055,0.055,0.055,0.0625,0.0625,0.0625,0.0625,0.07,0.07,0.07,0.07,0.075,0.075,0.075,0.075,0.08,0.08,0.08,0.08,0.085,0.085,0.085,0.085,0.09,0.09,0.09,0.09,0.1,0.1,0.1,0.1,0.11,0.11,0.11,0.11,0.125,0.125,0.125,0.125,0.14,0.14,0.14,0.14,0.155,0.155,0.155,0.155,0.17,0.17,0.17,0.17,0.19,0.19,0.19,0.19,0.205,0.205,0.205,0.205,0.22,0.22,0.22,0.22,0.235,0.235,0.235,0.235,0.255,0.255,0.255,0.255,0.28,0.28,0.28,0.28,0.305,0.305,0.305,0.305,0.33,0.33,0.33,0.33,0.35,0.35,0.35,0.35,0.37,0.37,0.37,0.37,0.39,0.39,0.39,0.39,0.4,0.4,0.4,0.4,0.41,0.41,0.41,0.41,0.42,0.42,0.42,0.42,0.44,0.44]
			},
			//PG
			itemSix=
			{
				price:[3.515625,3.554688,3.46875,3.257813,3.367188,3.507813,3.578125,3.59375,3.523438,3.960938,4.195313,4.359375,4.117188,4.3125,4.601563,4.59375,4.867188,5.007813,4.835938,5,4.234375,4.6875,4.859375,4.773438,5.5,5.421875,5.75,5.296875,5.71875,6.125,5.820313,6.40625,6.3125,5.515625,5.085938,5.335938,5.304688,5.265625,4.867188,4.820313,4.773438,4.84375,4.695313,4.664063,5,5.164063,5.117188,5.4375,5.757813,5.539063,5.78125,5.976563,6.421875,6.773438,7.460938,8.03125,7.5,8.070313,8.09375,8.78125,8,7.984375,8.46875,8.828125,10.328125,10.890625,10.84375,9.625,9.109375,9.828125,10.359375,10.828125,9.90625,10.15625,10.640625,10.484375,10.640625,9.671875,10.09375,10.4375,10.609375,10.453125,10.125,11.734375,12.96875,12.703125,12.78125,12.90625,12.84375,11.5,12.65625,11.71875,12.34375,13.21875,13.5625,13.40625,12.4375,13,12.46875,12.28125,12.28125,13,12.1875,12.09375,11.875,13.5625,14.1875,14.25,14.875,14.375,13.375,14.21875,14.09375,13.34375,13.9375,15.21875,14.90625,15.71875,15.625,15.5,16.28125,16.625,16.5625,17.46875,17.96875,17.96875,17.21875,17.34375,19.25,20.25,21.625,20.75,21,20.5,21.1875,21.125,21.96875,22.65625,22.3125,22.21875,24.375,24.75,27.1875,26.90625,28.90625,30.03125,28.6875,31.4375,34.46875,35.3125,38.03125,33.28125,34.53125,34,38.09375,39.90625,39.1875,42.4375,42.1875,41.09375,41.9375,45.53125,39.6875,38.25,35.5625,44.34375,43.8125,45.65625,45.4375,44.75,48.96875,46.90625,46.6875,44.0625,45.28125,49.625,46.875,52.4375,54,54.78125,50.53125,43.9375,28.375,29.875,33.25,28.375,28.5,30.914063,33.5,35.71875,37.4375,39.21875,35.919998,35.25,31.299999,30.025,32.119999,31.9,35.509998,37.075001,36.395,36.889999,38.73,39.564999,40.84,42.395,45.044998,45.130001,44.775002,44.650002,44.494999,44.325001,44.689999,44.224998,42.264999,42.970001,42.785,40.93,44.525002,44.924999,45.91,44.59,43.935001,43.645,46.41,49.145,48.119999,49.939999,50.540001,51.255001,52.439999,52.895,53.91,54.439999,52.150002,55.970001,54.119999,51.18,53.48,55.080002,53.23,53.09,53,54.150002,55.150002,52.75,55.630001,55.48,59.459999,55.990002,57.189999,57.880001,59.23,59.93,57.630001,58.209999,54.25,55.599998,56.200001,61.900002,61.98,63.389999,62.790001,64.269997,64.870003,63.490002,63.16,64.400002,63.549999,61.189999,61.860001,65.309998,70.339996,69.519997,74,73.419998,65.419998,66.18,70.07,67.050003,66.050003,60.810001,65.480003,69.769997,69.690002,64.540001,64.349998,61.82,54.5,48.169998,47.09,49.439999,51.939999,51.099998,55.509998,54.110001,57.919998,58,62.349998,60.630001,61.549999,63.279999,63.27,62.16,61.09,59.98,61.16,59.669998,59.970001,63.57,61.07,64.330002,63.130001,63.049999,61.599998,64.900002,67,63.57,61.490002,63.68,63.18,63.990002,64.57,66.709999,63.040001,67.620003,67.209999,63.639999,62.290001,61.25,64.540001,67.190002,69.360001,69.239998,69.830002,67.889999,75.160004,76.18,77.059998,76.769997,76.760002,76.989998,80.300003,77.889999,75.589996,80.75,84.220001,81.410004,76.620003,78.660004,80.599998,82.550003,80.790001,78.589996,77.32,83.110001,83.739998,87.269997,90.43,91.089996,84.290001,85.129997,81.940002,79.510002,78.389999,78.239998,76.699997,70.669998,71.940002,76.379997,74.839996,79.410004,81.690002,80.290001,82.309998,80.120003,81.040001,84.669998,85.589996,87.309998,89.75,86.800003,82.459999,84.080002,87.599998,91.07,89.849998,87.330002,88.089996,87.150002,90.82,92.269997,90.980003,86.339996,89.989998,91.879997,86.339996,78.519997,79.279999,72.339996,73.169998,78.059998,80.879997,82.949997,83.230003,88.68,94.510002,91.919998,96.470001,98.550003,104.050003,106.480003,102.910004,109.650002,118.040001,120.230003,124.379997,124.510002,122.059998,124.900002,124.620003,113.230003,110,117.870003,115.919998,119.57,131.119995,138.330002,138.990005,137.100006,138.869995,139.139999,128.210007,123.529999,135.429993,133.419998,134.850006,134.929993,142.229996,142.389999,139.800003,142.990005,144.580002,163.580002,160.449997,155.889999,152.800003,160.550003,147.880005,143.789993,143.309998],
				dividend:[0.040625,0.040625,0.040625,0.040625,0.040625,0.042188,0.042188,0.042188,0.042188,0.042188,0.042188,0.042188,0.04375,0.04375,0.04375,0.04375,0.05,0.05,0.05,0.05625,0.05625,0.05625,0.05625,0.0625,0.0625,0.0625,0.0625,0.0625,0.0625,0.06875,0.06875,0.06875,0.06875,0.06875,0.0775,0.0775,0.0775,0.0775,0.0875,0.0875,0.0875,0.0875,0.1,0.1,0.1,0.1,0.1125,0.1125,0.1125,0.1125,0.12625,0.126,0.126,0.126,0.1425,0.1425,0.1425,0.1425,0.16,0.16,0.16,0.16,0.175,0.175,0.175,0.175,0.19,0.19,0.19,0.535,0.205,0.205,0.205,0.205,0.2275,0.2275,0.2275,0.25,0.25,0.25,0.25,0.28,0.28,0.28,0.28,0.31,0.31,0.31,0.31,0.35,0.35,0.35,0.35,0.4,0.4,0.4,0.4,0.44,0.44,0.44,0.44,0.482,0.482,0.482,0.482,0.525,0.525,0.525,0.525,0.562,0.562,0.562,0.562,0.602,0.602,0.602,0.602,0.644,0.644,0.644,0.644,0.663,0.663,0.663,0.663,0.67,0.67,0.67,0.67,0.69,0.69,0.69,0.69,0.717,0.717,0.717,0.717,0.746,0.746,0.746,0.746,0.791,0.791,0.791,0.791,0.87,0.87,0.87,0.87,0.913,0.913]
			},
			//JNJ
			itemSeven=
			{
				price:[2.4375,2.460938,2.625,2.742188,2.9375,2.898438,2.882813,2.921875,2.773438,2.9375,3.117188,3.289063,3.359375,3.109375,3.585938,4.117188,4.273438,4.539063,4.257813,4.617188,4,4.359375,4.28125,4.101563,4.726563,5.390625,5.53125,5.445313,5.375,5.742188,5.953125,6.234375,5.96875,5,4.5625,4.679688,4.898438,5.203125,4.960938,4.734375,4.859375,4.960938,5,5.0625,5.367188,5.4375,5.375,5.320313,5.726563,5.382813,5.671875,6.007813,6.171875,5.984375,6.671875,6.546875,6.84375,6.921875,7.0625,7.421875,6.546875,6.703125,7.015625,7.078125,7.984375,8.46875,8.828125,8.203125,7.90625,8.046875,8.71875,8.96875,9.5625,10.265625,11.984375,11.8125,11.328125,10.4375,11.453125,11.609375,11.046875,11.890625,12.046875,14.3125,13.4375,12.65625,12.1875,11.859375,12.109375,11.1875,12.3125,12.34375,11.78125,12.5,12.59375,12.625,11,10.625,10.65625,10.90625,11.15625,10.375,9.125,10.1875,9.84375,10.53125,10.90625,11.21875,10.59375,10.03125,9.4375,10.34375,11.0625,10.71875,11.75,12.53125,12.9375,13.65625,13.34375,13.6875,14.53125,14.1875,14.875,16.25,16.53125,16.875,17.9375,17.25,18.53125,20.375,21.65625,21.375,24,23.375,23.0625,23.125,24.34375,24.75,23.875,24.625,25.625,24.625,26.625,24.875,28.875,28.75,26.4375,30.5625,30,32.1875,31.0625,28.34375,28.84375,28.6875,31.46875,32.9375,33.46875,37.6875,36.71875,35.75,34.53125,37,38.625,34.5,39.125,40.75,40.625,41.9375,42.5625,42.6875,46.75,48.75,46.3125,49,45.53125,51.125,45.9375,52.375,51.875,46.625,43.03125,36,35.125,41.25,44.75,50.9375,46.53125,45.976563,46.96875,46.0625,50,52.53125,46.564999,48.665001,43.735001,48.240002,48.474998,49.959999,54.099998,52.709999,55.400002,57.91,58.25,59.099998,57.509998,60.900002,64.949997,63.860001,61.349998,52.259998,52.599998,54.310001,54.080002,58.75,57.02,53.709999,53.610001,52.450001,57.869999,56.360001,54.349998,51.700001,51.790001,49.580002,49.52,50.330002,49.299999,51.66,53.419998,53.91,50.720001,54.029999,55.709999,55.700001,55.27,58.099998,56.330002,58.380001,60.32,63.419998,64.699997,65.599998,67.160004,68.629997,67.099998,65,63.959999,63.389999,63.279999,62.619999,61.75,60.099998,57.540001,57.650002,59.220001,58.610001,60.220001,59.919998,62.549999,64.660004,64.940002,67.400002,65.910004,66.019997,66.800003,62.93,60.259998,64.220001,63.27,61.619999,60.5,61.790001,65.699997,65.169998,67.739998,66.699997,63.139999,61.959999,64.870003,67.089996,66.739998,64.339996,68.470001,70.43,69.279999,61.34,58.580002,59.830002,57.689999,50,52.599998,52.360001,55.16,56.799999,60.889999,60.439999,60.889999,59.049999,62.84,64.410004,62.860001,63,65.199997,64.300003,58.299999,59.060001,58.09,57.02,61.959999,63.740002,61.549999,61.849998,59.77,61.439999,59.25,65.720001,67.290001,66.519997,64.790001,65.800003,63.689999,64.389999,64.720001,65.580002,65.910004,65.080002,65.959999,65.099998,62.43,67.559998,69.220001,67.43,68.910004,70.82,69.730003,70.099998,73.919998,76.110001,81.529999,85.230003,84.18,85.860001,93.5,86.410004,86.690002,92.610001,94.660004,91.589996,88.470001,92.120003,98.230003,101.290001,101.459999,104.620003,100.089996,103.730003,106.589996,107.779999,108.25,104.57,100.139999,102.510002,100.599998,99.199997,100.139999,97.459999,100.209999,93.980003,93.349998,101.029999,101.239998,102.720001,104.440002,105.209999,108.199997,112.080002,112.690002,121.300003,125.230003,119.339996,118.129997,115.989998,111.300003,115.209999,113.25,122.209999,124.550003,123.470001,128.25,132.289993,132.720001,132.369995,130.009995,139.410004,139.330002,139.720001,138.190002,129.880005,128.149994,126.489998,119.620003,121.339996,132.520004,134.690002,138.169998,139.990005,146.899994,129.050003,133.080002,136.639999,139.789993,141.199997,131.149994,139.279999,130.220001,128.360001,129.380005,132.039993,137.490005,145.869995,148.869995,134.479996,131.130005,150.039993,148.75,140.630005,145.759995,153.410004,148.880005,137.110001,144.679993,157.380005,163.130005,158.460007,164.350006,162.729996,169.25,164.740005,172.199997,173.130005,161.5,162.880005,155.929993,171.070007,172.289993,164.570007,177.229996,180.460007,179.529999,177.509995,174.229996],
				dividend:[0.01875,0.020313,0.020313,0.020313,0.020313,0.021875,0.021875,0.021875,0.021875,0.02625,0.02625,0.02625,0.02625,0.03125,0.03125,0.03125,0.03125,0.03625,0.03625,0.03625,0.03625,0.0425,0.0425,0.0425,0.0425,0.05,0.05,0.05,0.05,0.0575,0.0575,0.0575,0.0575,0.065,0.065,0.065,0.065,0.0725,0.0725,0.0725,0.0725,0.0825,0.0825,0.0825,0.0825,0.095,0.095,0.095,0.095,0.11,0.11,0.11,0.11,0.125,0.125,0.125,0.125,0.14,0.14,0.14,0.14,0.16,0.16,0.16,0.16,0.18,0.18,0.18,0.18,0.205,0.205,0.205,0.205,0.24,0.24,0.24,0.24,0.285,0.285,0.285,0.285,0.33,0.33,0.33,0.33,0.375,0.375,0.375,0.375,0.415,0.415,0.415,0.415,0.46,0.46,0.46,0.46,0.49,0.49,0.49,0.49,0.54,0.54,0.54,0.54,0.57,0.57,0.57,0.57,0.61,0.61,0.61,0.61,0.66,0.66,0.66,0.66,0.7,0.7,0.7,0.7,0.75,0.75,0.75,0.75,0.8,0.8,0.8,0.8,0.84,0.84,0.84,0.84,0.9,0.9,0.9,0.9,0.95,0.95,0.95,0.95,1.01,1.01,1.01,1.01,1.06,1.06,1.06,1.06,1.13]
			},
			//MRK
			itemEight=
			{
				price:[2.544529,2.647238,2.779766,2.696936,2.859282,2.985183,2.99181,3.024942,2.869222,3.087892,3.445717,3.631255,3.647821,3.992393,4.618586,4.598707,5.115564,5.539652,5.645674,6.1294,5.221586,5.758323,5.857718,6.566741,7.289016,8.176951,8.19683,7.819126,8.395621,9.03838,10.032337,10.834128,10.966656,9.621501,9.011874,8.402248,7.991412,8.766698,8.322731,8.34261,8.488391,8.945611,8.885973,8.72694,9.18416,9.104644,8.985369,9.18416,10.376908,10.158238,10.33715,10.854008,11.03292,10.635337,12.086514,11.669052,12.046756,12.384701,12.543734,12.325064,11.49014,10.873887,11.052799,11.649173,13.159987,13.79612,14.173823,12.981075,12.106393,12.225668,13.716603,14.293098,14.551527,16.241253,16.77799,17.135815,18.905058,18.467716,20.47551,20.177322,20.69418,21.82729,23.278467,26.479008,24.988073,25.067589,23.397741,23.059795,24.033875,23.258589,24.749523,23.19895,21.230915,20.93273,21.529102,20.69418,19.262882,18.36832,16.877384,17.652672,18.249046,16.937023,14.611164,15.207538,14.670802,15.326813,16.340649,16.400286,17.414122,15.446088,14.193702,14.134065,14.551527,14.193702,14.134065,16.281012,16.99666,16.99666,17.771948,18.189407,19.203243,20.217079,20.336355,20.455629,22.423664,23.4375,24.630247,23.795324,26.717558,27.433207,29.520515,31.309637,33.456585,31.607824,29.699427,28.864504,30.832539,30.832539,30.653625,31.309637,33.575859,35.245705,39.599236,37.989025,43.237118,43.952766,40.19561,43.117844,42.879295,48.813217,49.558681,43.803673,47.680103,42.581108,45.242428,50.572517,55.999523,60.85997,61.158157,57.490459,55.82061,63.812023,58.951572,55.313694,61.814171,64.438217,74.010017,70.372139,70.014313,77.767174,76.455154,67.151718,64.527672,70.252861,64.527672,64.110207,61.84399,75.918419,75.083488,64.110207,75.023857,58.742844,59.279579,66.316795,71.207062,73.115456,68.374283,66.689529,71.028152,85.818222,88.442268,89.33683,78.416031,76.526718,72.42366,72.490456,69.64695,60.982822,64.866409,62.11832,63.549618,60.887405,64.64695,56.106869,56.469467,58.520992,54.942749,51.851147,54.484734,48.32061,47.328243,48.206108,43.616413,51.755726,56.688931,54.017178,52.853054,50.333969,52.270992,55.515266,53.034351,57.776718,52.748093,48.015266,48.301525,42.223282,38.740459,44.083969,45.419846,45.877865,42.166031,44.847328,45.133587,45.324429,43.2729,42.910305,31.48855,29.875954,26.736641,30.667938,26.765266,30.248093,30.887405,32.347328,30.954199,29.389313,29.637405,26.937023,25.963739,26.927481,28.053434,30.353052,32.919846,33.263359,33.616413,32.84351,31.765266,34.761452,38.425571,38.692749,39.980915,43.339695,42.471375,41.603054,42.700382,42.127865,42.146946,49.083969,50.04771,47.519085,47.375954,47.872135,49.322517,55.591602,56.64122,55.448475,43.988548,42.270992,36.21183,36.29771,37.175571,35.963741,31.393129,34.036259,30.114504,29.532442,25.496183,29.007633,27.242367,23.091602,25.524809,23.12977,26.316793,26.67939,28.635496,30.944656,30.181297,29.513359,34.551525,34.866413,36.431297,35.190842,35.639313,33.435116,32.146946,33.36832,32.88168,33.549618,35.124046,34.646946,32.89122,34.389313,31.650763,31.078243,31.498093,34.303436,35.066795,33.673664,32.566795,31.583969,31.20229,32.919846,34.112595,35.973282,36.517178,36.421757,36.64122,37.442749,35.85878,39.837788,42.146946,41.078243,43.034351,43.540077,42.270992,39.064884,41.269085,40.7729,42.175571,44.847328,44.561069,44.322517,45.963741,45.124046,45.42939,43.024811,47.54771,47.757633,50.543892,54.379772,54.169846,55.877865,55.209923,55.200382,54.14122,57.356869,56.564884,55.286259,57.633587,54.188931,57.519085,55.85878,54.847328,56.832062,58.101147,54.322517,56.259541,51.383587,47.127865,52.15649,50.582062,50.400764,48.349236,47.910305,50.486641,52.328243,53.683205,54.971375,55.973282,59.914124,59.551525,56.030533,58.387405,56.173664,59.150764,62.853054,60.629772,59.475189,62.127865,61.154579,60.954197,60.935116,61.097328,52.566795,52.738548,53.692749,56.536259,51.736641,51.975189,56.173664,56.803436,57.919846,62.853054,65.448471,67.690842,70.238548,75.706108,72.910301,71.020988,77.566795,79.360687,75.104965,75.582062,80.009544,79.188934,82.509544,80.324425,82.690842,83.187019,86.784348,81.526718,73.053436,73.416031,75.706108,77.022903,73.78817,76.564888,81.364502,79.150764,71.765266,76.708015,78.053436,73.540077,69.293892,73.559158,71.087784,72.414124,77.769997,76.870003,76.290001,75.110001,88.050003,74.910004,76.639999,81.480003,76.580002,82.050003,88.690002,92.029999,91.169998,92.339996],
				dividend:[0.021204,0.021204,0.021204,0.023855,0.023855,0.023855,0.029156,0.029156,0.029156,0.029156,0.042409,0.042409,0.050891,0.050891,0.046915,0.058842,0.065204,0.065204,0.071565,0.071565,0.071565,0.071565,0.089059,0.089059,0.089059,0.089059,0.100191,0.100191,0.109733,0.109733,0.119275,0.119275,0.119275,0.119275,0.133588,0.133588,0.133588,0.133588,0.14313,0.14313,0.14313,0.14313,0.162214,0.162214,0.162214,0.162214,0.19084,0.19084,0.200382,0.200382,0.214695,0.214695,0.214695,0.214695,0.257634,0.257634,0.257634,0.257634,0.276718,0.276718,0.276718,0.276718,0.324427,0.324427,0.324427,0.324427,0.333969,0.333969,0.333969,0.333969,0.343511,0.343511,0.343511,0.343511,3.097328,0.353053,0.353053,0.353053,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.362595,0.400763,0.400763,0.400763,0.400763,0.410305,0.410305,0.410305,0.410305,0.419847,0.419847,0.419847,0.419847,0.429389,0.429389,0.429389,0.429389,0.438931,0.438931,0.438931,0.438931,0.448473,0.448473,0.448473,0.448473,0.458015,0.458015,0.458015,0.458015,0.524809,0.524809,0.524809,0.524809,0.582061,0.582061,0.582061,0.582061,0.620229,0.620229,0.65,0.65,0.69,0.69,0.69]
			},
			//F
			itemNine=
			{
				price:[2.965239,2.714334,2.577477,2.486239,2.645906,2.744747,2.714334,2.676318,2.691525,2.828382,3.284573,3.527874,3.809192,4.364224,4.980081,4.599922,4.896446,5.029502,4.88124,5.451478,4.835621,5.234788,5.337431,5.132145,6.785836,6.968312,7.698217,8.30267,8.291265,9.032575,9.272075,9.853718,8.941337,6.888479,6.489312,6.877074,7.755241,8.234241,7.82367,8.622003,8.78167,9.716861,9.671242,8.986956,9.329099,9.397527,9.488765,9.215051,9.967766,9.420337,8.918527,8.713241,8.895718,8.850099,9.101003,9.830908,9.28348,8.644813,8.143003,7.960527,7.869289,8.393908,8.622003,8.051765,8.416717,7.983336,7.572765,6.36386,5.633955,5.063716,4.995288,4.85843,5.109335,5.953288,5.907669,5.930478,6.728812,6.569145,6.112955,5.679574,5.474288,4.949669,4.37943,5.132145,5.565526,6.706003,7.002526,8.27986,8.097384,8.371098,8.348289,7.435908,7.207812,6.660383,7.664003,7.82367,8.416717,8.371098,9.488765,9.990575,9.488765,9.534385,9.625623,9.306289,10.081813,11.290719,11.085433,11.769719,12.225909,11.336338,10.72048,10.652052,10.538004,10.766099,11.632862,10.674861,10.127432,10.766099,9.899337,10.173051,9.215051,9.534385,9.808099,9.899337,10.674861,10.857337,10.583623,11.22229,11.359147,10.492385,10.309909,10.538004,10.766099,11.404766,12.545243,13.092672,13.320767,11.815338,11.815338,12.225909,11.404766,11.404766,11.952195,11.769719,11.7241,11.997814,11.450385,12.6821,13.685719,13.868196,14.917434,15.692958,16.468481,15.943863,15.692958,17.723007,18.612577,20.642628,23.653484,25.176008,28.507622,32.423126,31.324038,24.523424,25.828592,29.81279,30.259295,32.251392,33.762642,32.59486,31.152306,35.136501,31.392731,31.014919,26.652908,28.645008,27.614613,30.156256,27.751999,29.297592,27.33984,22.87479,25.244701,30.087563,26.687256,24.59708,26.634918,24.1875,25.5,26.125,22.75,23.4375,28.190001,27.809999,28.120001,29.48,24.35,24.549999,25.469999,19.870001,17.35,16.049999,18.940001,15.72,15.3,14.88,16.49,16,17.65,16,13.47,11.77,9.8,8.46,11.38,9.3,9.11,8.32,7.52,10.3,10.5,10.99,11.06,11.56,10.77,12.13,13.2,16,14.54,13.75,13.57,15.36,14.85,15.65,14.72,14.11,14.05,13.03,14.18,14.64,13.17,12.65,11.33,9.11,9.98,10.24,10.74,9.97,9.86,8.32,8.13,7.72,8.58,7.97,7.96,6.95,7.16,6.93,6.67,8.37,8.09,8.28,8.13,7.51,8.13,7.91,7.89,8.04,8.34,9.42,8.51,7.81,8.49,8.87,7.51,6.73,6.64,6.53,5.72,8.26,6.8,4.81,4.8,4.46,5.2,2.19,2.69,2.29,1.87,2,2.63,5.98,5.75,6.07,8,7.6,7.21,7,8.89,10,10.84,11.74,12.57,13.02,11.73,10.08,12.77,11.29,12.24,14.13,15.94,16.790001,15.95,15.05,14.91,15.47,14.92,13.79,12.21,11.12,9.67,11.68,10.6,10.76,12.42,12.38,12.48,11.28,10.56,9.59,9.24,9.34,9.86,11.16,11.45,12.95,12.95,12.61,13.15,13.71,15.68,15.47,16.879999,16.190001,16.870001,17.110001,17.08,15.43,14.96,15.39,15.6,16.15,16.440001,17.24,17.02,17.41,14.79,14.09,15.73,15.5,14.71,16.34,16.139999,15.8,15.17,15.01,14.83,13.87,13.57,14.81,14.33,14.09,11.94,12.51,13.5,13.56,13.49,12.57,12.66,12.6,12.07,11.74,11.96,12.13,12.36,12.53,11.64,11.47,11.12,11.19,11.22,11.03,11.97,12.27,12.52,12.49,10.97,10.61,11.08,11.24,11.55,11.07,10.04,9.48,9.25,9.55,9.41,7.65,8.8,8.77,8.78,10.45,9.52,10.23,9.53,9.17,9.16,8.59,9.06,9.3,8.82,6.96,4.83,5.09,5.71,6.08,6.61,6.82,6.66,7.73,9.08,8.79,10.53,11.7,12.25,11.54,14.53,14.86,13.95,13.03,14.16,17.08,19.190001,20.77,20.299999,17.559999,16.91,14.16,13.68,11.13,11.96],
				dividend:[0.030413,0.036495,0.036495,0.042578,0.042578,0.050181,0.050181,0.059305,0.059305,0.068429,0.068429,0.091238,0.091238,0.109486,0.109486,0.109486,0.136857,0.136857,0.136857,0.136857,0.136857,0.136857,0.136857,0.136857,0.136857,0.072991,0.072991,0.072991,0.072991,0.072991,0.072991,0.072991,0.072991,0.072991,0.072991,0.072991,0.072991,0.082114,0.082114,0.094888,0.094888,0.113135,0.113135,0.127733,0.127733,0.127733,0.140507,0.140507,0.140507,0.15328,0.15328,0.15328,0.15328,0.230809,0.230809,0.25279,0.25279,0.25279,0.25279,0.274772,0.274772,0.274772,0.286013,0.3,0.3,0.3,0.3,0.15,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.0175,0.0175,0.0175,0.0175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.05,0.05,0.05,0.05,0.1,0.1,0.1,0.1,0.125,0.125,0.125,0.125,0.15,0.15,0.15,0.15,0.4,0.15,0.15,0.15,0.2,0.15,0.15,0.15,0.28,0.15,0.15,0.15,0.15,0.15,0.15,0.15,0,0,0,0.15,0,0,0,0.1,0.1,0.1]
			},
			//XOM
			itemTen=
			{
				price:[6,5.9375,6.28125,6.4375,6.75,6.734375,6.5625,6.59375,6.484375,6.875,6.671875,6.890625,6.46875,6.53125,6.96875,7.078125,7.484375,7.609375,7.59375,8.609375,8.40625,8.5,8.65625,8.765625,10.34375,9.796875,10.71875,10.828125,10.875,11.65625,11.765625,12.453125,12.15625,10.65625,9.1875,9.53125,10.5,10.65625,10.5,11.21875,11.25,11.34375,11.84375,11.625,11.1875,11.1875,10.8125,11,11.59375,10.96875,10.96875,10.78125,10.78125,11,11.4375,10.9375,11.1875,11.5,11.8125,12.5,11.75,11.75,11.5625,11.3125,12,11.96875,12.96875,12.5,12.25,12.25,12.65625,12.9375,12.90625,13.78125,14.625,14.875,14.5625,14.53125,14.84375,14.5625,14.875,15.25,14.65625,15.21875,14.5625,14.28125,13.6875,15,15.15625,15.46875,15.875,16.0625,15.96875,15.3125,14.875,15.28125,15.28125,15.90625,16.53125,16.5,16.375,16.53125,16.40625,16.34375,16.375,16.34375,15.6875,15.78125,16.625,16.21875,15.71875,15.71875,15.28125,14.1875,14.875,14.875,14.375,15.71875,15.09375,15.1875,15.625,15.96875,16.65625,17.375,17.84375,17.65625,18.125,17.1875,18.0625,19.09375,19.34375,20.28125,20.0625,19.875,20.375,21.25,21.1875,21.71875,20.5625,20.375,20.8125,22.15625,23.59375,24.5,25.90625,25.0625,26.9375,28.3125,29.625,30.625,32.125,30.59375,32.03125,30.71875,30.5,30.59375,29.65625,31.875,33.8125,36.53125,35.25,35.6875,35.125,32.71875,35.3125,35.8125,37.5,36.5625,35.125,33.28125,35.28125,41.53125,39.9375,38.5625,39.6875,39.4375,38,37.03125,39.65625,40.28125,41.4375,37.65625,39,38.84375,41.65625,39.25,40.09375,40.820313,44.554688,44.59375,44,43.46875,42.075001,40.525002,40.5,44.299999,44.375,43.674999,41.759998,40.150002,39.400002,39.450001,37.400002,39.299999,39.049999,41.299999,43.830002,40.169998,39.93,40.919998,36.759998,35.450001,31.9,33.66,34.799999,34.939999,34.150002,34.02,34.950001,35.200001,36.400002,35.91,35.580002,37.700001,36.599998,36.580002,36.200001,41,40.790001,42.169998,41.59,42.549999,43.25,44.41,46.299999,46.099998,48.330002,49.220001,51.25,51.259998,51.599998,63.310001,59.599998,57.029999,56.200001,57.470001,58.75,59.900002,63.540001,56.139999,58.029999,56.169998,62.75,59.369999,60.860001,63.080002,60.91,61.349998,67.739998,67.669998,67.099998,71.419998,76.809998,76.629997,74.099998,71.68,75.449997,79.379997,83.169998,83.879997,85.129997,85.730003,92.559998,91.989998,89.160004,93.690002,85.699997,87.010002,84.580002,93.07,88.760002,88.129997,80.43,80.010002,77.660004,74.120003,80.150002,79.830002,76.480003,67.900002,68.099998,66.669998,69.349998,69.910004,70.389999,69.150002,68.610001,71.669998,75.07,68.190002,64.43,65,66.980003,67.769997,60.459999,57.07,59.68,59.110001,61.790001,66.489998,69.559998,73.120003,80.68,85.529999,84.129997,87.980003,83.470001,81.379997,79.790001,74.019997,72.629997,78.089996,80.440002,84.760002,83.739998,86.5,86.730003,86.339996,78.629997,85.57,86.849998,87.300003,91.449997,91.169998,88.139999,86.550003,89.970001,89.550003,90.110001,88.989998,90.470001,90.349998,93.75,87.160004,86.040001,89.620003,93.480003,101.199997,92.160004,96.269997,97.68,102.410004,100.529999,100.68,98.940002,99.459999,94.050003,96.709999,90.540001,92.449997,87.419998,88.540001,85,87.370003,85.199997,83.199997,79.209999,75.239998,74.349998,82.739998,81.660004,77.949997,77.849998,80.150002,83.589996,88.400002,89.019997,93.739998,88.949997,87.139999,87.279999,83.32,87.300003,90.260002,83.889999,81.32,82.010002,81.650002,80.5,80.730003,80.040001,76.330002,81.980003,83.349998,83.290001,83.639999,87.300003,75.739998,74.610001,77.75,81.239998,82.730003,81.510002,80.169998,85.019997,79.68,79.5,68.190002,73.279999,79.029999,80.800003,80.279999,70.769997,76.629997,74.360001,68.480003,70.610001,67.57,68.129997,69.779999,62.119999,51.439999,37.970001,46.470001,45.470001,44.720001,42.080002,39.939999,34.330002,32.619999,38.130001,41.220001,44.84,54.369999,55.830002,57.240002,58.369999,63.080002,57.57,54.52,58.82,64.470001,59.84,61.189999,75.959999,78.419998,82.589996,85.25,96,85.639999,86.099998],
				dividend:[0.10625,0.10625,0.10625,0.1125,0.1125,0.1125,0.1125,0.1125,0.1125,0.1125,0.125,0.125,0.125,0.1375,0.1375,0.1375,0.1375,0.1375,0.15,0.15,0.15,0.15,0.15,0.1675,0.1675,0.1675,0.1675,0.1675,0.1675,0.18,0.18,0.18,0.18,0.18,0.18,0.18,0.18,0.18,0.18,0.1875,0.1875,0.1875,0.1875,0.1875,0.1875,0.1975,0.1975,0.1975,0.1975,0.205,0.205,0.205,0.205,0.205,0.205,0.205,0.205,0.205,0.205,0.22,0.22,0.22,0.22,0.22,0.22,0.23,0.23,0.23,0.23,0.23,0.23,0.23,0.23,0.25,0.25,0.25,0.25,0.27,0.27,0.27,0.27,0.29,0.29,0.29,0.32,0.32,0.32,0.32,0.32,0.35,0.35,0.35,0.35,0.4,0.4,0.4,0.4,0.42,0.42,0.42,0.42,0.44,0.44,0.44,0.44,0.47,0.47,0.47,0.47,0.57,0.57,0.57,0.57,0.63,0.63,0.63,0.63,0.69,0.69,0.69,0.69,0.73,0.73,0.73,0.73,0.75,0.75,0.75,0.75,0.77,0.77,0.77,0.77,0.82,0.82,0.82,0.82,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.87,0.88,0.88,0.88]
			},
			//K
			itemEleven=
			{
				price:[5.515625,5.96875,6.21875,5.96875,7.28125,7.296875,6.703125,7.421875,7.75,8.375,8.765625,8.6875,9.1875,9.65625,10.6875,10.5,12.03125,14.375,13.53125,13.8125,11.59375,12.8125,13.15625,12.9375,14.96875,15.09375,14.75,14.4375,15.125,16.4375,15.8125,16.125,15.4375,14.40625,12.84375,13.09375,13.21875,12.875,13.03125,12.9375,13.4375,13.65625,13.84375,14.34375,15.25,15.6875,15.375,16.0625,16.53125,15,15.90625,16.34375,17.28125,17.65625,19.9375,19.625,18.40625,17.4375,17.75,16.90625,16.15625,15.25,15.28125,15.34375,16.3125,16.40625,17.1875,15.75,15.71875,17.125,18.0625,18.96875,19.5,20.84375,23.34375,22.75,24.59375,24.59375,26.21875,27.09375,27.09375,25.375,26.75,32.6875,28.375,28.5,28.8125,28.3125,29.25,33.1875,32.3125,34.0625,35.6875,37.5,34,33.5,31.0625,32,30.25,28.875,27,27.4375,24.375,26,24.75,28.5625,30.1875,28.375,26.875,25.25,25.4375,25.1875,26.1875,27.1875,25.875,28.3125,28.6875,29.375,28.5,29.0625,27.5,27,29.1875,31.8125,33.5625,35.6875,35.9375,33.75,36.1875,36.125,38.1875,38.625,38.3125,37.75,37.875,35.6875,36.375,36.625,37.375,33.75,34.4375,31.75,33.9375,32.8125,34.8125,34.25,33.625,34.8125,36.875,42.8125,45.9375,44.75,42.125,43.0625,46.375,49.625,46.375,42.625,43.125,41.25,41.3125,37.6875,33.25,30.5,32.9375,33,36.625,34.125,40.625,37,33.8125,37,34.6875,33,34.8125,35.5625,37.4375,39.8125,33.875,30.8125,24.25,25.3125,25.75,24.25,30.375,29.75,25.9375,23.1875,24.1875,25.375,24.625,26.25,26.200001,26.59,27.030001,25.5,26.719999,29,30.07,31.99,30,30.5,29.49,30.1,30.860001,34.549999,33.57,35.919998,36.700001,35.860001,34.439999,32.16,33.25,31.860001,33.369999,34.27,33.400002,29.57,30.65,32.740002,35.200001,34.369999,34.330002,33.529999,33.349998,33.130001,35.77,38.080002,37.810001,39.490002,39.240002,42.900002,42.400002,41.849998,41.66,41.98,42.66,43,43.700001,44.66,44.639999,44,43.27,44.950001,45.490002,44.439999,45.310001,45.330002,46.130001,44.169998,44.07,43.220001,42.900002,44.310001,44.040001,46.310001,47.099998,48.43,48.169998,50.700001,49.52,50.310001,49.779999,50.060001,49.27,49.84,51.43,52.91,53.98,51.790001,51.810001,54.93,56,52.790001,54.040001,52.43,47.799999,50.720001,52.560001,51.169998,51.810001,48.02,53.060001,54.439999,56.099998,50.419998,43.43,43.849998,43.689999,38.919998,36.630001,42.110001,43.25,46.57,47.5,47.09,49.23,51.540001,52.580002,53.200001,54.419998,52.150002,53.43,54.939999,53.43,50.299999,50.049999,49.68,50.509998,50.259998,49.23,51.080002,50.299999,53.560001,53.98,57.27,56.990002,55.32,55.779999,54.32,53.189999,54.209999,49.16,50.57,49.52,52.349998,53.630001,50.57,48.779999,49.330002,47.700001,50.650002,51.66,52.32,55.459999,55.849998,58.5,60.5,64.43,65.040001,62.049999,64.230003,66.239998,60.709999,58.73,63.25,60.639999,61.07,57.98,60.689999,62.709999,66.830002,68.980003,65.699997,59.830002,64.970001,61.599998,63.959999,66.25,65.440002,65.580002,64.480003,65.949997,63.330002,62.77,62.700001,66.169998,66.279999,66.550003,70.519997,68.769997,72.269997,73.440002,74.019997,76.550003,76.809998,74.370003,81.650002,82.709999,82.209999,77.470001,75.129997,72,73.709999,72.709999,74.07,72.610001,71,71.599998,69.459999,68,65.459999,62.369999,62.529999,66.160004,67.980003,68.110001,66.199997,65.010002,58.900002,64.389999,69.870003,71.029999,71.790001,70.019997,65.480003,63.650002,57.009998,59.009998,56.259998,57.380001,60.299999,52.560001,53.57,58.220001,62.799999,64.349998,63.529999,65.120003,69.160004,68.209999,60.470001,59.990002,65.5,65.309998,66.059998,68.989998,70.910004,64.589996,62.889999,63.91,62.23,58.939999,57.709999,63.299999,62.419998,65.489998,64.330002,63.360001,63.139999,63.919998,61.299999,61.18,64.419998,63,63.939999,64.489998,68.5,69.739998,71.339996,71.709999],
				dividend:[0.055,0.055,0.0575,0.0575,0.0625,0.0625,0.0625,0.0675,0.0675,0.085,0.085,0.085,0.095,0.095,0.095,0.095,0.1075,0.1075,0.1075,0.1075,0.12,0.12,0.12,0.12,0.1325,0.1325,0.1325,0.14,0.14,0.14,0.14,0.16,0.16,0.16,0.17,0.17,0.17,0.17,0.18,0.18,0.18,0.18,0.195,0.195,0.195,0.195,0.21,0.21,0.21,0.21,0.225,0.225,0.225,0.225,0.235,0.235,0.235,0.235,0.245,0.245,0.245,0.245,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.253,0.278,0.278,0.278,0.278,0.291,0.291,0.291,0.291,0.31,0.31,0.31,0.31,0.34,0.34,0.34,0.34,0.375,0.375,0.375,0.375,0.405,0.405,0.405,0.405,0.43,0.43,0.43,0.43,0.44,0.44,0.44,0.44,0.46,0.46,0.46,0.46,0.49,0.49,0.49,0.49,0.5,0.5,0.5,0.5,0.52,0.52,0.52,0.52,0.54,0.54,0.54,0.54,0.56,0.56,0.56,0.56,0.57,0.57,0.57,0.57,0.57,0.57,0.57,0.58,0.58,0.58,0.58,0.58]
			}
		];

//=======================
//Stock Names and Symbols
//=======================
		
	//--------
	//Prefixes
	//--------
	var corpNamePrefixArray=
	[
		{
			myCorpNamePrefix:"Agile",
			myCorpNameSymbolPrefix:"AL"
		},
		{
			myCorpNamePrefix:"Agora",
			myCorpNameSymbolPrefix:"AG"
		},
		{
			myCorpNamePrefix:"Alpha",
			myCorpNameSymbolPrefix:"AA"
		},
		{
			myCorpNamePrefix:"Ambi",
			myCorpNameSymbolPrefix:"AB"
		},
		{
			myCorpNamePrefix:"Ante",
			myCorpNameSymbolPrefix:"AN"
		},
		{
			myCorpNamePrefix:"Apex",
			myCorpNameSymbolPrefix:"AP"
		},
		{
			myCorpNamePrefix:"Beta",
			myCorpNameSymbolPrefix:"B"
		},
		{
			myCorpNamePrefix:"Century",
			myCorpNameSymbolPrefix:"CT"
		},
		{
			myCorpNamePrefix:"Cinna",
			myCorpNameSymbolPrefix:"CN"
		},
		{
			myCorpNamePrefix:"Hyper",
			myCorpNameSymbolPrefix:"HY"
		},
		{
			myCorpNamePrefix:"Claustro",
			myCorpNameSymbolPrefix:"CS"
		},
		{
			myCorpNamePrefix:"Contra",
			myCorpNameSymbolPrefix:"CT"
		},
		{
			myCorpNamePrefix:"Data",
			myCorpNameSymbolPrefix:"D"
		},
		{
			myCorpNamePrefix:"Delta",
			myCorpNameSymbolPrefix:"DT"
		},
		{
			myCorpNamePrefix:"Ex",
			myCorpNameSymbolPrefix:"X"
		},
		{
			myCorpNamePrefix:"Foundation",
			myCorpNameSymbolPrefix:"FD"
		},
		{
			myCorpNamePrefix:"Goliath",
			myCorpNameSymbolPrefix:"GT"
		},
		{
			myCorpNamePrefix:"Ini",
			myCorpNameSymbolPrefix:"IN"
		},
		{
			myCorpNamePrefix:"Intelli",
			myCorpNameSymbolPrefix:"IT"
		},
		{
			myCorpNamePrefix:"Loan",
			myCorpNameSymbolPrefix:"LN"
		},
		{
			myCorpNamePrefix:"Mega",
			myCorpNameSymbolPrefix:"MG"
		},
		{
			myCorpNamePrefix:"Mini",
			myCorpNameSymbolPrefix:"MN"
		},
		{
			myCorpNamePrefix:"Pinaccle",
			myCorpNameSymbolPrefix:"PC"
		},
		{
			myCorpNamePrefix:"Qual",
			myCorpNameSymbolPrefix:"QL"
		},
		{
			myCorpNamePrefix:"Retro",
			myCorpNameSymbolPrefix:"RT"
		},
		{
			myCorpNamePrefix:"Micro",
			myCorpNameSymbolPrefix:"MC"
		},
		{
			myCorpNamePrefix:"Uni",
			myCorpNameSymbolPrefix:"UN"
		},
	];
	
	//--------
	//Suffixes
	//--------
	var corpNameSuffixArray=
	[
		{
			myCorpNameSuffix:" Advisors",
			myCorpNameSymbolSuffix: "A"
		},
		{
			myCorpNameSuffix:" Company",
			myCorpNameSymbolSuffix: "C"
		},
		{
			myCorpNameSuffix:" Bank",
			myCorpNameSymbolSuffix: ""
		},
		{
			myCorpNameSuffix:" Brothers",
			myCorpNameSymbolSuffix: "BR"
		},
		{
			myCorpNameSuffix:" Cartel",
			myCorpNameSymbolSuffix: "C"
		},
		{
			myCorpNameSuffix:" Brigade",
			myCorpNameSymbolSuffix: "BD"
		},
		{
			myCorpNameSuffix:" Express",
			myCorpNameSymbolSuffix: "EX"
		},
		{
			myCorpNameSuffix:" Inc.",
			myCorpNameSymbolSuffix: ""
		},
		{
			myCorpNameSuffix:" Omega",
			myCorpNameSymbolSuffix: "OG"
		},
		{
			myCorpNameSuffix:" Palace",
			myCorpNameSymbolSuffix: "PC"
		},
		{
			myCorpNameSuffix:" Partners",
			myCorpNameSymbolSuffix: "PS"
		},
		{
			myCorpNameSuffix:" Planet",
			myCorpNameSymbolSuffix: "PN"
		},
		{
			myCorpNameSuffix:" Port",
			myCorpNameSymbolSuffix: "PT"
		},
		{
			myCorpNameSuffix:" Professionals",
			myCorpNameSymbolSuffix: "PS"
		},
		{
			myCorpNameSuffix:" Sisters",
			myCorpNameSymbolSuffix: "SR"
		},
		{
			myCorpNameSuffix:" Syndicate",
			myCorpNameSymbolSuffix: "SN"
		},
		{
			myCorpNameSuffix:" Warehouse",
			myCorpNameSymbolSuffix: "W"
		},
		{
			myCorpNameSuffix:"Clique",
			myCorpNameSymbolSuffix: "CQ"
		},
		{
			myCorpNameSuffix:".io",
			myCorpNameSymbolSuffix: ""
		},
		{
			myCorpNameSuffix:"Care",
			myCorpNameSymbolSuffix: "CR"
		},
		{
			myCorpNameSuffix:"Co",
			myCorpNameSymbolSuffix: ""
		},
		{
			myCorpNameSuffix:"Con",
			myCorpNameSymbolSuffix: ""
		},
		{
			myCorpNameSuffix:"Dyne",
			myCorpNameSymbolSuffix: "DN"
		},
		{
			myCorpNameSuffix:" Empire",
			myCorpNameSymbolSuffix: "E"
		},
		{
			myCorpNameSuffix:"First",
			myCorpNameSymbolSuffix: "FT"
		},
		{
			myCorpNameSuffix:"Tech",
			myCorpNameSymbolSuffix: "TC"
		},
		{
			myCorpNameSuffix:"United",
			myCorpNameSymbolSuffix: "UD"
		},
	];
		
	//---------------
	//Dividends Array
	//---------------
	var dividends
	[
		0,0,0,0,0,0,0,0,0,0,0
	]
		
	//------------------
	//'Total'/Footer Row
	//------------------
	var totalRowMarketGL = 0;
	var totalRowMarketGLPercent = 0;
	var totalPortfolioValue=0;
	var totalPortfolioCost=0;
	var totalLifetimeDividends=0;
	var totalRowPlayerGL = 0;
	var totalRowPlayerGLPercent = 0;

//=======================
//Investment Constructors
//=======================

	//-----------------
	//Stock Constructor
	//-----------------
	function Stock(
	corpNamePrefix, corpNameSuffix, corpSymbolPrefix, corpSymbolSuffix, price, marketGainOrLoss, marketGainOrLossPercent, playerOwnedShares, playerSharesValue, playerSharesTotalCost, dividendYield, quarterlyDividend, playerDividendsReceived, playerGainOrLoss, playerGainOrLossPercent)
	{
		this.theCorpNamePrefix = corpNamePrefix;
		this.theCorpNameSuffix = corpNameSuffix;
		this.theCorpSymbolPrefix = corpSymbolPrefix;
		this.theCorpSymbolSuffix = corpSymbolSuffix;
		this.thePrice = price;
		this.theMarketGainOrLoss = marketGainOrLoss;
		this.theMarketGainOrLossPercent = marketGainOrLossPercent;
		this.thePlayerOwnedShares = playerOwnedShares;
		this.thePlayerSharesValue = playerSharesValue;
		this.thePlayerSharesTotalCost = playerSharesTotalCost;
		this.theDividendYield = dividendYield;
		this.theQuarterlyDividend = quarterlyDividend;
		this.thePlayerDividendsReceived = playerDividendsReceived;
		this.thePlayerGainOrLoss = playerGainOrLoss;
		this.thePlayerGainOrLossPercent = playerGainOrLossPercent;	
	}
	
	//-----------------------
	//SP500 Index Constructor
	//-----------------------
	function Index(
	indexName, indexSymbol, price, marketGainOrLoss, marketGainOrLossPercent, playerOwnedShares, playerSharesValue, playerSharesTotalCost, 
	playerGainOrLoss, playerGainOrLossPercent)
	{
		this.theIndexName = indexName;
		this.theIndexSymbol = indexSymbol;
		this.thePrice = price;
		this.theMarketGainOrLoss = marketGainOrLoss;
		this.theMarketGainOrLossPercent = marketGainOrLossPercent;
		this.thePlayerOwnedShares = playerOwnedShares;
		this.thePlayerSharesValue = playerSharesValue;
		this.thePlayerSharesTotalCost = playerSharesTotalCost;
		this.thePlayerGainOrLoss = playerGainOrLoss;
		this.thePlayerGainOrLossPercent = playerGainOrLossPercent;
	}	
	
	//--------------------
	//Purchase Constructor
	//--------------------
	function StockPurchase(stockNumber, volume, price)
	{
		this.theStockNumber = stockNumber;
		this.theVolume = volume;
		this.thePrice = price;
	}
	
	function IndexPurchase(indexNumber, volume, price)
	{
		this.theIndexNumber = indexNumber;
		this.theVolume = volume;
		this.thePrice = price;
	}
	
	//---------------------
	//Stock Purchases Array
	//---------------------
	var stockPurchases=
	[
		//Stock One
		[
			
		],
		
		//Stock Two
		[
			
		],
		
		//Stock Three
		[
			
		],
		
		//Stock Four
		[
			
		],
		
		//Stock Five
		[
			
		],
		
		//Stock Six
		[
		
		]
	];
	
	//------------------
	//Stock Market Array
	//------------------
	var stockMarket =
	[
		//Stock One
		[
			
		],
		
		//Stock Two
		[
			
		],
		
		//Stock Three
		[
		
		],
		
		//Stock Four
		[
			
		],
		
		//Stock Five
		[
			
		],
		
		//Stock Six
		[
		
		]
	];
	
	//--------------------
	//Stock Elements Array
	//--------------------
	var stockElements=
	[
		//Stock Name
		[
		document.getElementById("stockOneCompany"),
		document.getElementById("stockTwoCompany"),
		document.getElementById("stockThreeCompany"),
		document.getElementById("stockFourCompany"),
		document.getElementById("stockFiveCompany"),
		document.getElementById("indexOneIndex")
		],
		
		//Stock Symbol
		[
		document.getElementById("stockOneSymbol"),
		document.getElementById("stockTwoSymbol"),
		document.getElementById("stockThreeSymbol"),
		document.getElementById("stockFourSymbol"),
		document.getElementById("stockFiveSymbol"),
		document.getElementById("indexOneSymbol")
		],
		
		//Stock Price
		[
		document.getElementById("stockOnePrice"),
		document.getElementById("stockTwoPrice"),
		document.getElementById("stockThreePrice"),
		document.getElementById("stockFourPrice"),
		document.getElementById("stockFivePrice"),
		document.getElementById("indexOnePrice")
		],
		
		//Stock Price 'Market' Gain Or Loss
		[
		document.getElementById("stockOneMarketGainOrLoss"),
		document.getElementById("stockTwoMarketGainOrLoss"),
		document.getElementById("stockThreeMarketGainOrLoss"),
		document.getElementById("stockFourMarketGainOrLoss"),
		document.getElementById("stockFiveMarketGainOrLoss"),
		document.getElementById("indexOneMarketGainOrLoss")
		],
		
		//Stock Price 'Market' Gain Or Loss Percent
		[
		document.getElementById("stockOneMarketGainOrLossPercent"),
		document.getElementById("stockTwoMarketGainOrLossPercent"),
		document.getElementById("stockThreeMarketGainOrLossPercent"),
		document.getElementById("stockFourMarketGainOrLossPercent"),
		document.getElementById("stockFiveMarketGainOrLossPercent"),
		document.getElementById("indexOneMarketGainOrLossPercent")
		],
		
		//Stock Shares Owned
		[
		document.getElementById("stockOnePlayerOwnedShares"),
		document.getElementById("stockTwoPlayerOwnedShares"),
		document.getElementById("stockThreePlayerOwnedShares"),
		document.getElementById("stockFourPlayerOwnedShares"),
		document.getElementById("stockFivePlayerOwnedShares"),
		document.getElementById("indexOnePlayerOwnedShares")
		],
		
		//Value of Shares Owned
		[
		document.getElementById("stockOnePlayerSharesValue"),
		document.getElementById("stockTwoPlayerSharesValue"),
		document.getElementById("stockThreePlayerSharesValue"),
		document.getElementById("stockFourPlayerSharesValue"),
		document.getElementById("stockFivePlayerSharesValue"),
		document.getElementById("indexOnePlayerSharesValue")
		],
		
		//Total Costs
		[
		document.getElementById("stockOnePlayerSharesCost"),
		document.getElementById("stockTwoPlayerSharesCost"),
		document.getElementById("stockThreePlayerSharesCost"),
		document.getElementById("stockFourPlayerSharesCost"),
		document.getElementById("stockFivePlayerSharesCost"),
		document.getElementById("indexOnePlayerSharesCost")
		],
		
		//Dividend Yield
		[
		document.getElementById("stockOneDividendYield"),
		document.getElementById("stockTwoDividendYield"),
		document.getElementById("stockThreeDividendYield"),
		document.getElementById("stockFourDividendYield"),
		document.getElementById("stockFiveDividendYield")
		],
		
		//Quarterly Dividend
		[
		document.getElementById("stockOneQuarterlyDividend"),
		document.getElementById("stockTwoQuarterlyDividend"),
		document.getElementById("stockThreeQuarterlyDividend"),
		document.getElementById("stockFourQuarterlyDividend"),
		document.getElementById("stockFiveQuarterlyDividend")
		],
		
		//Total Dividends Received
		[
		document.getElementById("stockOnePlayerDividendsReceived"),
		document.getElementById("stockTwoPlayerDividendsReceived"),
		document.getElementById("stockThreePlayerDividendsReceived"),
		document.getElementById("stockFourPlayerDividendsReceived"),
		document.getElementById("stockFivePlayerDividendsReceived")
		],
		
		//Player Gain or Loss
		[
		document.getElementById("stockOnePlayerGainOrLoss"),
		document.getElementById("stockTwoPlayerGainOrLoss"),
		document.getElementById("stockThreePlayerGainOrLoss"),
		document.getElementById("stockFourPlayerGainOrLoss"),
		document.getElementById("stockFivePlayerGainOrLoss"),
		document.getElementById("indexOnePlayerGainOrLoss")
		],
		
		//Player Gain or Loss Percent
		[
		document.getElementById("stockOnePlayerGainOrLossPercent"),
		document.getElementById("stockTwoPlayerGainOrLossPercent"),
		document.getElementById("stockThreePlayerGainOrLossPercent"),
		document.getElementById("stockFourPlayerGainOrLossPercent"),
		document.getElementById("stockFivePlayerGainOrLossPercent"),
		document.getElementById("indexOnePlayerGainOrLossPercent")
		]
		
	];
	
	var lineCharts = 
	[
	document.getElementById("stockOneChart"),
	document.getElementById("stockTwoChart"),
	document.getElementById("stockThreeChart"),
	document.getElementById("stockFourChart"),
	document.getElementById("stockFiveChart"),
	document.getElementById("sp500Chart")
	];
	
	var inputFields = 
	[
	document.getElementById("inputFieldStock1"),
	document.getElementById("inputFieldStock2"),
	document.getElementById("inputFieldStock3"),
	document.getElementById("inputFieldStock4"),
	document.getElementById("inputFieldStock5"),
	document.getElementById("inputFieldIndex1")
	]

//=========
//FUNCTIONS
//=========

	//---------------------
	//Fisher Yates Shuffles
	//---------------------

	
		//Shuffle Prices and Dividends
		function fisherYatesShufflePriceAndDividends()
		{
		for (z = priceAndDividends.length -1; z > 0; z--) 
		{
		  j = Math.floor(Math.random() * z)
		  k = priceAndDividends[z]
		  priceAndDividends[z] = priceAndDividends[j]
		  priceAndDividends[j] = k
		}
		}

		//Corp Name Prefixes
		function fisherYatesShuffleCorpNamePrefixArray()
		{
		for (z = corpNamePrefixArray.length -1; z > 0; z--) 
		{
		  j = Math.floor(Math.random() * z)
		  k = corpNamePrefixArray[z]
		  corpNamePrefixArray[z] = corpNamePrefixArray[j]
		  corpNamePrefixArray[j] = k
		}
		}
		
		//Corp name Suffixes
		function fisherYatesShuffleCorpNameSuffixArray()
		{
		for (z = corpNameSuffixArray.length -1; z > 0; z--) 
		{
		  j = Math.floor(Math.random() * z)
		  k = corpNameSuffixArray[z]
		  corpNameSuffixArray[z] = corpNameSuffixArray[j]
		  corpNameSuffixArray[j] = k
		}
		}
		
	//--------------------------
	//Personal Finance Functions
	//--------------------------
	
		//----------------------
		//Calculate Monthly Dividends
		//---------------------------
		function calculateDividends()
		{
			if((monthCounter==1||monthCounter==4||monthCounter==7||monthCounter==10) && timeCounter!=0)
			{
			//Add the Quarterly Dividends for All Owned Shares of Stock
			theQuarterlyDividends = ((stockMarket[0].theQuarterlyDividend * stockMarket[0].thePlayerOwnedShares) + (stockMarket[1].theQuarterlyDividend * stockMarket[1].thePlayerOwnedShares) + (stockMarket[2].theQuarterlyDividend * stockMarket[2].thePlayerOwnedShares)+ (stockMarket[3].theQuarterlyDividend * stockMarket[3].thePlayerOwnedShares) + (stockMarket[4].theQuarterlyDividend * stockMarket[4].thePlayerOwnedShares))
			cash+=theQuarterlyDividends;
			document.getElementById("theCash").innerHTML="$" + cash.toFixed(2);
			
			//Update the 'LifeTime Dividends' and the 'Quarterly Dividends'
			stockMarket[0].thePlayerDividendsReceived += (stockMarket[0].thePlayerOwnedShares * stockMarket[0].theQuarterlyDividend);
			stockMarket[1].thePlayerDividendsReceived += (stockMarket[1].thePlayerOwnedShares * stockMarket[1].theQuarterlyDividend);
			stockMarket[2].thePlayerDividendsReceived += (stockMarket[2].thePlayerOwnedShares * stockMarket[2].theQuarterlyDividend);
			stockMarket[3].thePlayerDividendsReceived += (stockMarket[3].thePlayerOwnedShares * stockMarket[3].theQuarterlyDividend);
			stockMarket[4].thePlayerDividendsReceived += (stockMarket[4].thePlayerOwnedShares * stockMarket[4].theQuarterlyDividend);
			document.getElementById("theQuarterlyDividends").innerHTML="$" + theQuarterlyDividends.toFixed(3);
			for(i=0; i<5; i++)
			{
			stockElements[10].innerHTML = "$" + stockMarket[i].thePlayerDividendsReceived.toFixed(2);
			}
			theQuarterlyDividends=0;
			}
		}
		
	//---------------
	//Stock Functions
	//---------------
		
		//------------
		//Create Stock
		//------------
		function newGenerateStocks()
		{
			for(item=0; item<6; item++)
			{
				if(item<5)
				{
					stockMarket[item] = new Stock
					(
						//Name Prefix and Name Suffix from corpNamePrefix and corpNameSuffix Arrays
						corpNamePrefixArray[item].myCorpNamePrefix,
						corpNameSuffixArray[item].myCorpNameSuffix,
						//Symbol Prefix and Symbol Suffix from corpNamePrefix and corpNameSuffix Arrays
						corpNamePrefixArray[item].myCorpNameSymbolPrefix,
						corpNameSuffixArray[item].myCorpNameSymbolSuffix,
						//Price Pulled from priceAndDividends Array
						priceAndDividends[item].price[timeCounter],
						//Market Gain/Loss
						0,
						//Market Gain/Loss Percent
						0,
						//Player Owned Shares
						0,
						//Player Shares Value
						0,
						//Player Shares Total Cost
						0,
						//Stock Dividend Yield
						priceAndDividends[item].dividend[quarterCounter]*4/priceAndDividends[item].price[timeCounter]*100,
						//Stock Quarterly Dividend
						priceAndDividends[item].dividend[quarterCounter],
						//Player Dividends Received
						0,
						//Player Gain/Loss
						0,
						//Player Gain/Loss Percent
						0
					)
					//console.log(stockElements[5][item]);
					stockElements[0][item].innerHTML = stockMarket[item].theCorpNamePrefix + stockMarket[item].theCorpNameSuffix;
					stockElements[1][item].innerHTML = stockMarket[item].theCorpSymbolPrefix + stockMarket[item].theCorpSymbolSuffix;
					stockElements[2][item].innerHTML = "$" + stockMarket[item].thePrice.toFixed(2);
					stockElements[3][item].innerHTML = "$" + stockMarket[item].theMarketGainOrLoss;
					stockElements[4][item].innerHTML = stockMarket[item].theMarketGainOrLossPercent + "%";
					stockElements[5][item].innerHTML = stockMarket[item].thePlayerOwnedShares;
					stockElements[6][item].innerHTML = "$" + stockMarket[item].thePlayerSharesValue;
					stockElements[8][item].innerHTML = stockMarket[item].theDividendYield.toFixed(2) + "%";
					stockElements[9][item].innerHTML = "$" + stockMarket[item].theQuarterlyDividend.toFixed(3);
					stockElements[10][item].innerHTML = "$" + stockMarket[item].thePlayerDividendsReceived.toFixed(2);
					stockElements[11][item].innerHTML = "$" + stockMarket[item].thePlayerGainOrLoss;
					stockElements[12][item].innerHTML = stockMarket[item].thePlayerGainOrLossPercent + "%";
				}
				else if(item==5)
				{
					stockMarket[5] = new Index
					(
					//Name is just text; there are no other indexes from which to choose.
					"SP 500 Index",
					"^SPX",
					//Price Pulled Straight from the PriceSP500 Array
					priceSP500[timeCounter],
					//Market Gain/Loss
					0,
					//Market Gain/Loss Percent
					0,
					//Player Owned Shares
					0,
					//Player Shares Value
					0,
					//Player Shares Total Cost
					0,
					//Player Gain/Loss
					0,
					//Player Gain/Loss Percent
					0	
					)
					
				stockElements[0][item].innerHTML = stockMarket[item].theIndexName;
				stockElements[1][item].innerHTML = stockMarket[item].theIndexSymbol;
				stockElements[2][item].innerHTML = "$" + stockMarket[item].thePrice.toFixed(2);
				stockElements[3][item].innerHTML = "$" + stockMarket[item].theMarketGainOrLoss;
				stockElements[4][item].innerHTML = stockMarket[item].theMarketGainOrLossPercent + "%";
				stockElements[5][item].innerHTML = stockMarket[item].thePlayerOwnedShares;
				stockElements[6][item].innerHTML = "$" + stockMarket[item].thePlayerSharesValue;
				stockElements[7][item].innerHTML = "$" + stockMarket[item].thePlayerSharesTotalCost;
				stockElements[11][item].innerHTML = "$" + stockMarket[item].thePlayerGainOrLoss;
				stockElements[12][item].innerHTML = stockMarket[item].thePlayerGainOrLossPercent + "%";
				}
			}
		}	
			
		//----------------------
		//Portfolio Google Chart
		//----------------------
		function drawChart() 
		{
		var data = google.visualization.arrayToDataTable([
		  ['Stock', 'Mhl'],
		  [corpNamePrefixArray[0].myCorpNamePrefix+corpNameSuffixArray[0].myCorpNameSuffix,stockMarket[0].thePlayerSharesValue],
		  [corpNamePrefixArray[1].myCorpNamePrefix+corpNameSuffixArray[1].myCorpNameSuffix,stockMarket[1].thePlayerSharesValue],
		  [corpNamePrefixArray[2].myCorpNamePrefix+corpNameSuffixArray[2].myCorpNameSuffix,stockMarket[2].thePlayerSharesValue],
		  [corpNamePrefixArray[3].myCorpNamePrefix+corpNameSuffixArray[3].myCorpNameSuffix,stockMarket[3].thePlayerSharesValue],
		  [corpNamePrefixArray[4].myCorpNamePrefix+corpNameSuffixArray[4].myCorpNameSuffix,stockMarket[4].thePlayerSharesValue],
		  ["SP 500 Index",stockMarket[5].thePlayerSharesValue],
		  ['Cash', cash],
		]);
		
		var options = 
		{
		  is3D:true,
		  backgroundColor:secondaryShade2,
		  colors:[
		  //Dark Blue
		  '#5C84CC',
		  //Green
		  '#3FC155',
		  //Purple
		  '#743DBD',
		  //Orange
		  '#CB722F',
		  //Aqua
		  '#2FA2CB',
		  //Red
		  '#CF2B2B',
		  //USD Green
		  sageGreen
		  ],
		  legend:
		  {
			  textStyle:
			  {fontSize:11}
		  },
		 chartArea:
			{
				width: pieChartAreaWidth,
				height: pieChartAreaHeight
			},
		width: pieChartGraphWidth,
		height: pieChartGraphHeight
		};

		var chart = new google.visualization.PieChart(document.getElementById('myChart'));
		  chart.draw(data, options);
		};
		
		//----------------------------
		//Function to Draw Line Charts
		//----------------------------
		function drawLineChart(chart)
		{
		var i = chart;
		//console.log("Test" + i);
		var titleVar;
		if(i<5)
		{
			//console.log("Starting the loop. i = " + i);
			//console.log(corpNamePrefixArray[i]);
			titleVar = corpNamePrefixArray[i].myCorpNamePrefix+corpNameSuffixArray[i].myCorpNameSuffix;
		}
		else
		{
			titleVar = "SP 500 Index";
		}
		// Set Data
		var data = google.visualization.arrayToDataTable(
			[
			['Month', 'Price'],
			[timeCounter-12,priceAndDividends[i].price[timeCounter-12]],
			[timeCounter-11,priceAndDividends[i].price[timeCounter-11]],
			[timeCounter-10,priceAndDividends[i].price[timeCounter-10]],
			[timeCounter-9,priceAndDividends[i].price[timeCounter-9]],
			[timeCounter-8,priceAndDividends[i].price[timeCounter-8]],
			[timeCounter-7,priceAndDividends[i].price[timeCounter-7]],
			[timeCounter-6,priceAndDividends[i].price[timeCounter-6]],
			[timeCounter-5,priceAndDividends[i].price[timeCounter-5]],
			[timeCounter-4,priceAndDividends[i].price[timeCounter-4]],
			[timeCounter-3,priceAndDividends[i].price[timeCounter-3]],
			[timeCounter-2,priceAndDividends[i].price[timeCounter-2]],
			[timeCounter-1,priceAndDividends[i].price[timeCounter-1]],
			[timeCounter,priceAndDividends[i].price[timeCounter]]
			]
			);
			// Set Options
			var options = 
			{
			title: titleVar,
			hAxis: {title: 'Month'},
			vAxis: {title: 'Price'},
			legend: 'none',
			colors: [sageGreen],
			backgroundColor:secondaryShade2,
			chartArea:
			{
				width: chartAreaWidth,
				height: chartAreaHeight
			},
			width: lineGraphWidth,
			height: lineGraphHeight
			};
			 
			var chart = new google.visualization.LineChart(lineCharts[i]);
			chart.draw(data, options);
		};
		
		
		
		
//==================
//STOCK TRANSACTIONS
//==================

	//-----------------
	//Stock Transaction
	//-----------------
	function stockTransaction(stock, action)
	{
		i = stock;
		theAction = action;
		if(theAction == "Purchase")
		{
			if(cash > stockMarket[i].thePrice * parseInt(inputFields[i].value))
			{
				stockMarket[i].thePlayerSharesTotalCost = 0;
				
				//------------------
				//Reduce Player Cash
				//------------------
				cash-=Number(stockMarket[i].thePrice * parseInt(inputFields[i].value));
				document.getElementById("theCash").innerHTML="$" + cash.toFixed(2);
				
				//---------------------------------
				//Update the Number of Owned Shares
				//---------------------------------
				stockMarket[i].thePlayerOwnedShares+=parseInt(inputFields[i].value);
				stockElements[5][i].innerHTML=stockMarket[i].thePlayerOwnedShares;
				
				//----------------------------------------------------------------
				//Calculate the Value of Said Shares; Add to Total Portfolio Value
				//----------------------------------------------------------------
				stockMarket[i].thePlayerSharesValue = stockMarket[i].thePlayerOwnedShares * stockMarket[i].thePrice;
				stockElements[6].innerHTML= "$" + stockMarket[i].thePlayerSharesValue.toFixed(2);
				document.getElementById("theTotalPortfolioValue").innerHTML="$" + totalPortfolioValue;
				
				//Trigger the Constructor to Record the Purchase Volume and Price
				stockPurchases[i][stockPurchases[i].length]=new StockPurchase(1,inputFields[i].value,stockMarket[i].thePrice);
				
				//Calculate the Average Cost of Each Owned Share
				for(var j = 0; j<stockPurchases[i].length; j++)
				{
					stockMarket[i].thePlayerSharesTotalCost+=(stockPurchases[i][j].theVolume * stockPurchases[i][j].thePrice)
				}
				stockElements[7].innerHTML= "$" + stockMarket[i].thePlayerSharesTotalCost.toFixed(2);
				
				//Calculate the Gain/Loss Now...
				stockMarket[i].thePlayerGainOrLoss = stockMarket[i].thePlayerSharesValue - stockMarket[i].thePlayerSharesTotalCost;
				stockElements[11].innerHTML= "$" + stockMarket[i].thePlayerGainOrLoss;
				stockMarket[i].thePlayerGainOrLossPercent = (stockMarket[i].thePlayerGainOrLoss / stockMarket[i].thePlayerSharesTotalCost).toFixed(2)*100;
				stockElements[12].innerHTML=stockMarket[i].thePlayerGainOrLossPercent+"%";
				
				//Flash Owned Volume as Green
				stockElements[5][i].style.backgroundColor = "#009900";
				stockElements[5][i].style.color = "#ffffff";
				stockElements[5][i].style.fontWeight = "bold";

				//Flash Cash As Red
				document.getElementById("theCash").style.backgroundColor = "#cc0000";
				document.getElementById("theCash").style.color = "#ffffff";
				document.getElementById("theCash").style.fontWeight = "bold";
			}
			else if(parseInt(inputFields[i].value)==null)
			{
				alert("Please enter the number of shares that you intend to purchase");
			}
			else if(cash < stockMarket[i].thePrice * parseInt(inputFields[i].value))
			{
				alert("You do not have enough money to purchase a share of this stock.")
			}
			
		}
		else if(theAction == "Sale")
		{
			if((stockMarket[i].thePlayerOwnedShares - parseInt(inputFields[i].value)) >= 0)
			{
					
				//Increase Player Cash
				cash+=Number(stockMarket[i].thePrice * parseInt(inputFields[i].value));
				document.getElementById("theCash").innerHTML="$" + cash.toFixed(2);
				
				//Reduce the Player Owned Shares
				stockMarket[i].thePlayerOwnedShares -= parseInt(inputFields[i].value);
				stockElements[5][i].innerHTML=stockMarket[i].thePlayerOwnedShares;
				
				//Update the Value of the Player's Remaining Shares
				stockMarket[i].thePlayerSharesValue = stockMarket[i].thePlayerOwnedShares * stockMarket[i].thePrice;
				stockElements[6][i].innerHTML= "$" + stockMarket[i].thePlayerSharesValue.toFixed(2);
				
				//LIFO Calculation
				//Reduce the Owned Shares Arrays, and Calculate the 'Total Cost (LIFO)' accordingly
				for(j = parseInt(inputFields[i].value); j>0; j--)
				{
					if(stockPurchases[i][stockPurchases[i].length-1].theVolume > 0)
					{
						stockPurchases[i][stockPurchases[i].length-1].theVolume--;
						stockMarket[i].thePlayerSharesTotalCost -= stockPurchases[i][stockPurchases[i].length-1].thePrice;
						stockElements[7][i].innerHTML = "$" + stockMarket[i].thePlayerSharesTotalCost.toFixed(2);
					}
					else if(stockPurchases[i][stockPurchases[i].length-1].theVolume == 0)
					{
						stockPurchases[i].splice(stockPurchases[i].length-1, 1);
						stockPurchases[i][stockPurchases[i].length-1].theVolume--;
						stockMarket[i].thePlayerSharesTotalCost -= stockPurchases[i][stockPurchases[i].length-1].thePrice;
						stockElements[7][i].innerHTML = "$" + stockMarket[i].thePlayerSharesTotalCost.toFixed(2);
					}
					
				//Calculate the Gain/Loss Now...
				stockMarket[i].thePlayerGainOrLoss = stockMarket[i].thePlayerSharesValue - stockMarket[i].thePlayerSharesTotalCost;
				stockElements[11][i].innerHTML= "$" + stockMarket[i].thePlayerGainOrLoss.toFixed(2);
				stockMarket[i].thePlayerGainOrLossPercent = (stockMarket[i].thePlayerGainOrLoss / stockMarket[i].thePlayerSharesTotalCost).toFixed(2)*100;
				stockElements[12][i].innerHTML=stockMarket[i].thePlayerGainOrLossPercent+"%";	
				}
				
				//Flash 'Owned' Stock As Red
				stockElements[5][i].style.backgroundColor = "#cc0000";
				stockElements[5][i].stylecolor = "#ffffff";
				stockElements[5][i].stylefontWeight = "bold";
					
				//Flash Cash as Green
				document.getElementById("theCash").style.backgroundColor = "#009900";
				document.getElementById("theCash").style.color = "#ffffff";
				document.getElementById("theCash").style.fontWeight = "bold";
				}
			else if(stockMarket[i].thePlayerOwnedShares - parseInt(inputFields[i].value) < 0)
			{
				alert("That volume of shares exceeds the number of shares that you own.");
			}
		}
	setTimeout(restoreDefaultColors,1000,i);
	}
				
		//-------------------------------------
		//Functions to Restore White Background
		//-------------------------------------
		
			//-----------------------
			//Restore Default Colors
			//-----------------------
			function restoreDefaultColors(stock)
			{
				var i = stock;
				//Store Owned Shares to Default Colors
				stockElements[5][i].style.backgroundColor = "";
				stockElements[5][i].style.color = "";
				stockElements[5][i].style.fontWeight = "normal";
				
				//Restore Cash to Black
				document.getElementById("theCash").style.backgroundColor = "";
				document.getElementById("theCash").style.color = "black";
				document.getElementById("theCash").style.fontWeight = "normal";
			};
		
//==================
//Recalculate Stocks
//==================
function newRecalculateStocks()
{
for(item=0; item<6; item++)
{
	//First Apply to Regular Stocks
	if(item < 5)
	{
		stockMarket[item].thePlayerSharesTotalCost = 0;
		
		//Create the New Stock
		stockMarket[item] = new Stock
		(
			//Name Prefix and Name Suffix from corpNamePrefix and corpNameSuffix Arrays
			corpNamePrefixArray[item].myCorpNamePrefix,
			corpNameSuffixArray[item].myCorpNameSuffix,
			//Symbol Prefix and Symbol Suffix from corpNamePrefix and corpNameSuffix Arrays
			corpNamePrefixArray[item].myCorpNameSymbolPrefix,
			corpNameSuffixArray[item].myCorpNameSymbolSuffix,
			//Price Pulled from priceAndDividends Array
			priceAndDividends[item].price[timeCounter],
			//Market Gain/Loss
			(priceAndDividends[item].price[timeCounter]-priceAndDividends[item].price[timeCounter-1]),
			//Market Gain/Loss Percent
			(priceAndDividends[item].price[timeCounter]-priceAndDividends[item].price[timeCounter-1])/(priceAndDividends[item].price[timeCounter-1])*1,
			//Player Owned Shares
			stockMarket[item].thePlayerOwnedShares,
			//Player Shares Value
			stockMarket[item].thePlayerSharesValue = (stockMarket[item].thePlayerOwnedShares * priceAndDividends[item].price[timeCounter]),
			//Player Shares Total Cost
			stockMarket[item].thePlayerSharesTotalCost,
			//Stock Dividend Yield
			priceAndDividends[item].dividend[quarterCounter]*4/priceAndDividends[item].price[timeCounter]*100,
			//Stock Quarterly Dividend
			priceAndDividends[item].dividend[quarterCounter],
			//Player Dividends Received
			stockMarket[item].thePlayerDividendsReceived,
			//Player Gain/Loss
			stockMarket[item].thePlayerGainOrLoss,
			//Player Gain/Loss Percent
			stockMarket[item].thePlayerGainOrLossPercent
		)
		
		//Calculate the Player Shares Total Cost; I Can't Quite Remember Why This Needs to be Recalculated
		for(var i = 0; i<stockPurchases[item].length; i++)
		{
			stockMarket[item].thePlayerSharesTotalCost+=(stockPurchases[item][i].theVolume * stockPurchases[item][i].thePrice)
		};
		
		//Calculate the Gain/Loss Now...
		stockMarket[item].thePlayerGainOrLoss = stockMarket[item].thePlayerSharesValue.toFixed(2) - stockMarket[item].thePlayerSharesTotalCost.toFixed(2);
		stockMarket[item].thePlayerGainOrLossPercent = (stockMarket[item].thePlayerGainOrLoss / stockMarket[item].thePlayerSharesTotalCost).toFixed(2)*100;
		
		//Now Populate the HTML Fields
		stockElements[0][item].innerHTML = stockMarket[item].theCorpNamePrefix + stockMarket[item].theCorpNameSuffix;
		stockElements[2][item].innerHTML = "$" + stockMarket[item].thePrice.toFixed(2);
		stockElements[3][item].innerHTML ="$" + stockMarket[item].theMarketGainOrLoss.toFixed(2);
		stockElements[4][item].innerHTML = stockMarket[item].theMarketGainOrLossPercent.toFixed(3)+"%";
		stockElements[5][item].innerHTML = stockMarket[item].thePlayerOwnedShares;
		stockElements[6][item].innerHTML = "$" + stockMarket[item].thePlayerSharesValue.toFixed(2);
		stockElements[7][item].innerHTML = stockMarket[item].thePlayerSharesTotalCost.toFixed(2);
		stockElements[8][item].innerHTML = stockMarket[item].theDividendYield.toFixed(2) + "%";
		stockElements[9][item].innerHTML = "$" + stockMarket[item].theQuarterlyDividend.toFixed(3);
		stockElements[10][item].innerHTML = "$" + stockMarket[item].thePlayerDividendsReceived.toFixed(2);
		stockElements[11][item].innerHTML = "$" + stockMarket[item].thePlayerGainOrLoss.toFixed(2);
		stockElements[12][item].innerHTML = stockMarket[item].thePlayerGainOrLossPercent.toFixed(2)+"%";
		//console.log("Populated all of the HTML Fields");
		if(isNaN(stockMarket[item].thePlayerGainOrLossPercent))
		{
			stockElements[12][item].innerHTML = "0.00%";
		}
		if(stockMarket[item].theMarketGainOrLoss<0)
		{
			stockElements[3][item].style="color:red";
			stockElements[4][item].style="color:red";
		}
		else
		{
			stockElements[3][item].style="color:black";
			stockElements[4][item].style="color:black";
		}
		if(stockMarket[item].thePlayerGainOrLoss<0)
		{
			stockElements[11][item].style="color:red";
			stockElements[12][item].style="color:red";
		}
		else
		{
			stockElements[11][item].style="color:black";
			stockElements[12][item].style="color:black";
		}
	}

	//Now Apply to Index Fund
	else if(item==5)
	{
		stockMarket[item].thePlayerSharesTotalCost = 0,
		stockMarket[item] = new Index
		(
		//Name is just text; there are no other indexes from which to choose.
		"SP 500 Index",
		"^SPX",
		//Price Pulled Straight from the PriceSP500 Array
		priceSP500[timeCounter],
		//Market Gain/Loss
		(priceSP500[timeCounter]-priceSP500[timeCounter-1]),
		//Market Gain/Loss Percent
		(priceSP500[timeCounter]-priceSP500[timeCounter-1])/priceSP500[timeCounter-1]*1,
		//Player Owned Shares
		stockMarket[item].thePlayerOwnedShares,
		//Player Shares Value
		stockMarket[item].thePlayerSharesValue = (stockMarket[item].thePlayerOwnedShares * priceSP500[timeCounter]),
		//Player Shares Total Cost
		stockMarket[item].thePlayerSharesTotalCost,
		//Player Gain/Loss
		stockMarket[item].thePlayerGainOrLoss,
		//Player Gain/Loss Percent
		stockMarket[item].thePlayerGainOrLossPercent
		)

		for(var i = 0; i<stockPurchases[item].length; i++)
		{
			stockMarket[item].thePlayerSharesTotalCost+=(stockPurchases[item][i].theVolume * stockPurchases[item][i].thePrice);
		};
		
		//Calculate the Gain/Loss Now...
		stockMarket[item].thePlayerGainOrLoss = stockMarket[item].thePlayerSharesValue.toFixed(2) - stockMarket[item].thePlayerSharesTotalCost.toFixed(2);
		stockMarket[item].thePlayerGainOrLossPercent = (stockMarket[item].thePlayerGainOrLoss / stockMarket[item].thePlayerSharesTotalCost).toFixed(2)*100;
		
		//Now Populate the HTML Elements...
		stockElements[1][item].innerHTML=stockMarket[item].theIndexName;
		stockElements[2][item].innerHTML= "$" + stockMarket[item].thePrice.toFixed(2);
		stockElements[3][item].innerHTML="$" + stockMarket[item].theMarketGainOrLoss.toFixed(2);
		stockElements[4][item].innerHTML=stockMarket[item].theMarketGainOrLossPercent.toFixed(3)+"%";
		stockElements[5][item].innerHTML=stockMarket[item].thePlayerOwnedShares;
		stockElements[6][item].innerHTML="$" + stockMarket[item].thePlayerSharesValue.toFixed(2);
		stockElements[7][item].innerHTML="$" + stockMarket[item].thePlayerSharesTotalCost.toFixed(2);
		stockElements[11][item].innerHTML= "$" + stockMarket[item].thePlayerGainOrLoss.toFixed(2);
		stockElements[12][item].innerHTML=stockMarket[item].thePlayerGainOrLossPercent.toFixed(2)+"%";
		
		if(isNaN(stockMarket[item].thePlayerGainOrLossPercent))
		{
			stockElements[12][item].innerHTML= "0.00%";
		}
		if(stockMarket[item].theMarketGainOrLoss<0)
		{
			stockElements[3][item].style="color:red";
			stockElements[4][item].style="color:red";
		}
		else
		{
			stockElements[3][item].style="color:black";
			stockElements[4][item].style="color:black";
		}
		if(stockMarket[item].thePlayerGainOrLoss<0)
		{
			stockElements[11][item].style="color:red";
			stockElements[12][item].style="color:red";
		}
		else
		{
			stockElements[11][item].style="color:black";
			stockElements[12][item].style="color:black";
		}			
	}
}

//----------------------
//Recalculate Pie Chart
//---------------------
drawChart();
for(i=0; i<6; i++)
{
drawLineChart(i);
}


//--------------------------
//Recalculate the Totals Row
//--------------------------
var totalPortfolioValue=
		(
			stockMarket[0].thePlayerSharesValue + 
			stockMarket[1].thePlayerSharesValue +
			stockMarket[2].thePlayerSharesValue +
			stockMarket[3].thePlayerSharesValue +
			stockMarket[4].thePlayerSharesValue +
			stockMarket[5].thePlayerSharesValue
		);
	document.getElementById("theTotalPortfolioValue").innerHTML="$"+totalPortfolioValue.toFixed(2);
	
//--------------------------------
//Recalculate Total Portfolio Cost
//--------------------------------
var totalPortfolioCost=
(
	stockMarket[0].thePlayerSharesTotalCost + 
	stockMarket[1].thePlayerSharesTotalCost +
	stockMarket[2].thePlayerSharesTotalCost +
	stockMarket[3].thePlayerSharesTotalCost +
	stockMarket[4].thePlayerSharesTotalCost +
	stockMarket[5].thePlayerSharesTotalCost
);
document.getElementById("theTotalPortfolioCost").innerHTML="$"+totalPortfolioCost.toFixed(2);
	
//------------------------------
//Recalculate Lifetime Dividends
//------------------------------
var totalLifetimeDividends=
(
	stockMarket[0].thePlayerDividendsReceived + 
	stockMarket[1].thePlayerDividendsReceived +
	stockMarket[2].thePlayerDividendsReceived +
	stockMarket[3].thePlayerDividendsReceived +
	stockMarket[4].thePlayerDividendsReceived
);
document.getElementById("theTotalLifetimeDividends").innerHTML="$"+totalLifetimeDividends.toFixed(2);
	
//-------------------------------------
//Recalculate Total Portfolio Gains ($)
//-------------------------------------
var totalRowPlayerGL=
	(
		stockMarket[0].thePlayerGainOrLoss + 
		stockMarket[1].thePlayerGainOrLoss +
		stockMarket[2].thePlayerGainOrLoss +
		stockMarket[3].thePlayerGainOrLoss +
		stockMarket[4].thePlayerGainOrLoss +
		stockMarket[5].thePlayerGainOrLoss
	);
	document.getElementById("theTotalPlayerGainOrLoss").innerHTML="$"+totalRowPlayerGL.toFixed(2);
	
//-------------------------------------
//Recalculate Total Portfolio Gains (%)
//-------------------------------------
var totalRowPlayerGLPercent=
		(
			((totalRowPlayerGL
			/
			totalPortfolioCost.toFixed(2)) * 100)
		);
	document.getElementById("theTotalPlayerGainOrLossPercent").innerHTML=totalRowPlayerGLPercent.toFixed(2);
}
		
//============================
//Time Functions and Variables
//============================

	//------------------------
	//Function to Advance Time
	//------------------------
	function advanceTime()
	{
		function showAlert()
		{
		clearInterval(repeater);
		var totalNetWorth = cash + totalRowPlayerGL + totalLifetimeDividends;
		alert("The game has ended. With your initial $1000 investment, you now have a net worth of $" + totalNetWorth.toFixed(2));
		}
		
		if(year===2022)
		{
			speed=0;
			showAlert();
			exit();
		}
		
		else
		{
			if(!isPaused)
			{
				if((monthCounter==1||monthCounter==4||monthCounter==7||monthCounter==10) && timeCounter!=0)
				{
					quarterCounter++;
				}
				if(changeSpeed != speed)
					{
						clearInterval(repeater);
						speed=changeSpeed;
						repeater = setInterval(advanceTime,speed);
					}
				if(monthCounter!=11)
					{
						monthCounter++;
						document.getElementById("monthAndYear").innerHTML=month[monthCounter] + " " + year;
					}
				else if(monthCounter==11)
					{
						monthCounter=0;
						year++;
						document.getElementById("monthAndYear").innerHTML=month[monthCounter] + " " + year;
					}
					calculateDividends();
					timeCounter++;
					newRecalculateStocks();
			}
		}
	}
	
	//---------------
	//Speed Variables
	//---------------

		var speed = 1500;
		var changeSpeed = speed;
		repeater = setInterval(advanceTime, speed);
		var isPaused = false;
		
		function pauseTime()
		{
			isPaused = true;
		}
		
		function speedSetting(selection)
		{
			theSelection=selection;
			if(theSelection==0)
			{
				isPaused = true;
			}
			else if(theSelection==1)
			{
				isPaused = false;
				changeSpeed = 1500;
			}
			else if(theSelection==2)
			{
				isPaused = false;
				changeSpeed = 500;
			}
			else if(theSelection==3)
			{
				isPaused = false;
				changeSpeed = 166;
			}
		}
		
		//Function to set speed to x1 on load
		function normalSpeedOnLoad()
		{
			var x1Button = document.getElementById("normalSpeedButton");
			x1Button.focus();
		}
		window.addEventListener('load', normalSpeedOnLoad);

//============
//Stock Viewer
//============
function viewStock(evt, theStockName)
{
	var i, stockLineChartElements, stockName;
	stockLineChartElements = document.getElementsByClassName("stockLineChartElements");
	for (i = 0; i < stockLineChartElements.length; i++)
	{
		stockLineChartElements[i].style.display = "none";
	}
	stockName = document.getElementsByClassName("stockName");
	for (i = 0; i < stockName.length; i++)
	{
		stockName[i].className = stockName[i].className.replace(" active", "");
	}
	document.getElementById(theStockName).style.display = "block";
	evt.currentTarget.className += " active";
}


//==============
//ONSTART
//==============
fisherYatesShuffleCorpNamePrefixArray()
fisherYatesShuffleCorpNameSuffixArray();
fisherYatesShufflePriceAndDividends()
newGenerateStocks();


//==========================
//GOOGLE CHART FUNCTIONALITY
//==========================

	//--------------
	//Draw Functions
	//--------------
	google.charts.load('current', {'packages':['corechart']});
	google.charts.setOnLoadCallback(drawChart);
	google.charts.setOnLoadCallback(drawLineChart(0));
	google.charts.setOnLoadCallback(drawLineChart(1));
	google.charts.setOnLoadCallback(drawLineChart(2));
	google.charts.setOnLoadCallback(drawLineChart(3));
	google.charts.setOnLoadCallback(drawLineChart(4));
	google.charts.setOnLoadCallback(drawLineChart(5));